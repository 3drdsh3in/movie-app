{"version":3,"sources":["actions/setItemType.js","actions/types.js","actions/movieActions/postMoviesNowPlaying.js","actions/movieActions/postMoviesPopular.js","actions/movieActions/postMoviesTopRated.js","actions/movieActions/postMoviesUpcoming.js","actions/TVActions/postTVAiringToday.js","actions/TVActions/postTVPopular.js","actions/TVActions/postTVOnTheAir.js","actions/TVActions/postTVTopRated.js","components/HomeHeader/HomeHeader.js","components/ItemCarousel/ItemCarousel.js","components/MainFooter/MainFooter.js","components/Home/Home.js","actions/toggleNav.js","components/MainNav/MainNav.js","components/SearchResults/SearchResults.js","App.js","reducers/PostMDBConfigReducer.js","reducers/setItemType.js","reducers/toggleNav.js","reducers/movieReducers/postMoviesNowPlaying.js","reducers/movieReducers/postMoviesPopular.js","reducers/movieReducers/postMoviesTopRated.js","reducers/movieReducers/postMoviesUpcoming.js","reducers/movieReducers/getMovieDetails.js","reducers/movieReducers/getMovieCredits.js","reducers/movieReducers/getMovieTrailers.js","reducers/movieReducers/getMovieReviews.js","reducers/movieReducers/getMovieFavourites.js","reducers/movieReducers/getMoviesRated.js","reducers/movieReducers/rateMovie.js","reducers/TVReducers/postTVAiringToday.js","reducers/TVReducers/postTVPopular.js","reducers/TVReducers/postTVOnTheAir.js","reducers/TVReducers/postTVTopRated.js","reducers/TVReducers/getTVDetails.js","reducers/TVReducers/getTVCredits.js","reducers/TVReducers/getTVTrailers.js","reducers/TVReducers/getTVReviews.js","reducers/TVReducers/getTVFavourites.js","reducers/TVReducers/getTVRated.js","reducers/peopleReducers/getPeopleDetails.js","reducers/peopleReducers/getPeopleCombinedCredits.js","reducers/peopleReducers/getPeoplePopular.js","reducers/getDiscover.js","reducers/rootReducer.js","store.js","index.js"],"names":["setItemTypeMovie","type","postMoviesNowPlaying","url","console","log","dispatch","fetch","then","res","json","data","payload","catch","error","postMoviesPopular","postMoviesTopRated","postTVAiringToday","postTVPopular","postTVOnTheAir","postTVTopRated","HomeHeader","config","this","props","MDBConfig","sliderEl","document","querySelector","Swiper","slidesPerView","loop","spaceBetween","observer","autoplay","delay","pagination","el","navigation","nextEl","prevEl","className","items","map","item","i","key","id","to","itemType","toLowerCase","style","background","images","secure_base_url","backdrop_sizes","backdrop_path","backgroundSize","toUpperCase","title","name","vote_average","React","Component","ItemCarousel","data-wow-duration","movie","src","poster_sizes","poster_path","alt","original_name","xmlns","viewBox","d","MainFooter","Home","handleMovieFetch","postMoviesUpcoming","apiKey","handleTVFetch","querySelectorAll","init","slidesPerGroup","centeredSlides","breakpoints","1145","992","768","594","300","0","clickable","scrollbar","hide","TVAiringToday","results","moviesUpcoming","moviesPopular","moviesNowPlaying","moviesTopRated","TVPopular","TVOnTheAir","TVTopRated","data-wow-delay","onClick","setItemType","connect","state","PostMDBConfig","toggleNav","navStatus","placeholder","SearchResults","App","initialState","action","toggleMav","actions","getMovieDetails","getMovieCredits","getMoviesRated","getMovieReviews","getMovieFavourites","rateMovie","intialState","getTVDetails","cast","getTVCredits","getTVTrailers","getTVReviews","getTVFavourites","getTVRated","getPeopleDetails","getPeopleCombinedCredits","getPeoplePopular","getDiscover","rootReducer","combineReducers","PostMDBConfigReducer","getMovieTrailers","getMovieFavorites","getTVFavorites","middleware","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","ReactDOM","render","getElementById"],"mappings":"0YAMeA,EAJU,SAAAC,GAAI,MAAK,CAC9BA,KAAe,OAATA,ECUsB,mBADG,wBCKpBC,EAVc,SAAAC,GAEzB,OADAC,QAAQC,IAAIF,GACL,SAAAG,GACHC,MAAMJ,GACDK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIL,EAVe,CACrCL,KDYkC,yBCXlCW,QAQoDD,OAC3CE,OAAM,SAAAC,GAAK,OAAIV,QAAQC,IAAIS,QCKzBC,EAXW,SAAAZ,GACtB,OAAO,SAAAG,GACHC,MAAMJ,GACDK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIL,EATY,CAClCL,KFa+B,sBEZ/BW,QAOiDD,OACxCE,OAAM,SAAAC,GACHV,QAAQC,IAAIS,QCGbE,EATY,SAAAb,GACvB,OAAO,SAAAG,GACHC,MAAMJ,GACDK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIL,EATa,CACnCL,KHciC,wBGbjCW,QAOkDD,OACzCE,OAAM,SAAAC,GAAK,OAAIV,QAAQC,IAAIS,QCIzBE,EATY,SAAAb,GACvB,OAAO,SAAAG,GACHC,MAAMJ,GACDK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIL,EATa,CACnCL,KJegC,uBIdhCW,QAOkDD,OACzCE,OAAM,SAAAC,GAAK,OAAIV,QAAQC,IAAIS,QCIzBG,EATW,SAAAd,GACtB,OAAO,SAAAG,GACHC,MAAMJ,GACDK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIL,EATY,CAClCL,KLwBgC,uBKvBhCW,QAOiDD,OACxCE,OAAM,SAAAC,GAAK,OAAIV,QAAQC,IAAIS,QCIzBI,EATO,SAAAf,GAClB,OAAO,SAAAG,GACHC,MAAMJ,GACDK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIL,EATQ,CAC9BL,KNyB2B,kBMxB3BW,QAO6CD,OACpCE,OAAM,SAAAC,GAAK,OAAIV,QAAQC,IAAIS,QCIzBK,EATQ,SAAAhB,GACnB,OAAO,SAAAG,GACHC,MAAMJ,GACDK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIL,EATS,CAC/BL,KP0B8B,qBOzB9BW,QAO8CD,OACrCE,OAAM,SAAAC,GAAK,OAAIV,QAAQC,IAAIS,QCIzBM,EATQ,SAAAjB,GACnB,OAAO,SAAAG,GACHC,MAAMJ,GACDK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIL,EATS,CAC/BL,KR2B6B,oBQ1B7BW,QAO8CD,OACrCE,OAAM,SAAAC,GAAK,OAAIV,QAAQC,IAAIS,Q,eC2DzBO,G,uLA/DD,IAAD,OACCC,EAASC,KAAKC,MAAMC,UA6B1B,OA1BA,WACI,IAAMC,EAAWC,SAASC,cAAc,0BACxC,GAAKF,EAGU,IAAIG,IAAOH,EAAU,CAChCI,cAAe,EACfC,MAAM,EACNC,aAAc,EACdC,UAAU,EAEVC,SAAU,CACNC,MAAO,KAGXC,WAAY,CACRC,GAAI,0BACJpC,KAAM,eAEVqC,WAAY,CACRC,OAAQ,2BACRC,OAAQ,8BArBpB,GA2BI,yBAAKC,UAAU,yBAGX,yBAAKA,UAAU,kBACVlB,KAAKC,MAAMkB,MAAMC,KAAI,SAACC,EAAMC,GACzB,GAAIA,EAAI,GAAKA,EAAI,EACb,OACI,kBAAC,IAAD,CAAMC,IAAKF,EAAKG,GAAIC,GAAE,mBAAc,EAAKxB,MAAMyB,SAASC,cAAlC,YAAmDN,EAAKG,IAAMN,UAAU,eAAeU,MAAO,CAChHC,WAAW,iLAAD,OAGuC9B,EAAO+B,OAAS/B,EAAO+B,OAAOC,gBAAkB,IAHvF,OAG4FhC,EAAO+B,OAAS/B,EAAO+B,OAAOE,eAAe,GAAK,IAH9I,OAGmJX,EAAKY,cAHxJ,0BAG+LC,eAAgB,iBAEzN,6BACI,uBAAGhB,UAAU,0BAA0B,SAASiB,eAChD,wBAAIjB,UAAU,uBAA+C,UAAxB,EAAKjB,MAAMyB,SAAuBL,EAAKe,MAAQf,EAAKgB,MACzF,uBAAGnB,UAAU,+BAA+BG,EAAKiB,aAAjD,iBAQxB,yBAAKpB,UAAU,gC,GAzDNqB,IAAMC,YCsChBC,G,uLArCD,IAAD,OACC1C,EAASC,KAAKC,MAAMC,UAE1B,OACI,yBAAKgB,UAAU,gCAAgCwB,oBAAkB,MAE7D,yBAAKxB,UAAU,oBACX,wBAAIA,UAAU,2BAA2BlB,KAAKC,MAAMmC,OAGpD,yBAAKlB,UAAU,kBACVlB,KAAKC,MAAMkB,MAAMC,KAAI,SAACuB,EAAOrB,GAAR,OAElB,yBAAKC,IAAKoB,EAAMnB,GAAIN,UAAU,gBAC1B,kBAAC,IAAD,CAAMO,GAAE,mBAAc,EAAKxB,MAAMvB,KAAKiD,cAA9B,YAA+CgB,EAAMnB,KACzD,yBAAKN,UAAU,sBAAsB0B,IAAG,0CAAqC7C,EAAO+B,OAAS/B,EAAO+B,OAAOC,gBAAkB,IAArF,OAA0FhC,EAAO+B,OAAS/B,EAAO+B,OAAOe,aAAa,GAAK,IAA1I,OAA+IF,EAAMG,aAAeC,IAAKJ,EAAMP,QACvN,wBAAIlB,UAAU,uBAAuByB,EAAMP,OAC3C,wBAAIlB,UAAU,uBAAuByB,EAAMK,eAC3C,uBAAG9B,UAAU,uBACT,yBAAKA,UAAU,4BAA4B+B,MAAM,6BAA6BC,QAAQ,eAAc,0BAAMC,EAAE,uIAC3GR,EAAML,oBAO3B,yBAAKpB,UAAU,2CACf,yBAAKA,UAAU,4CAGnB,wBAAIA,UAAU,uC,GAjCHsB,c,MCyCZY,MAxCf,WACI,OACI,4BAAQlC,UAAU,eACd,6BAASA,UAAU,oBACf,yBAAKA,UAAU,2BACX,wBAAIA,UAAU,gCAAd,aACA,6BACA,kBAAC,IAAD,CAAMO,GAAG,KAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,SAAT,WACA,kBAAC,IAAD,CAAMA,GAAG,aAAT,aAEJ,yBAAKP,UAAU,6BACX,yBAAKA,UAAU,kCACX,wBAAIA,UAAU,gCAAd,cACA,2BAAG,kBAAC,IAAD,CAAMO,GAAG,aAAT,yBAEP,yBAAKP,UAAU,kCACX,wBAAIA,UAAU,4BAAd,iBACA,8CAIZ,6BAASA,UAAU,qBAEf,yBAAKA,UAAU,2BACX,kBAAC,IAAD,CAAMO,GAAG,IAAG,uBAAGP,UAAU,0BACzB,kBAAC,IAAD,CAAMO,GAAG,IAAG,uBAAGP,UAAU,6BACzB,kBAAC,IAAD,CAAMO,GAAG,IAAG,uBAAGP,UAAU,wBAG7B,yBAAKA,UAAU,uBAAuB0B,IAAI,iJAE1C,yBAAK1B,UAAU,+BACX,oECjBdmC,G,iNAYFC,iBAAmB,WACf,EAAKrD,MAAMsD,mBAAX,8DAAqF,EAAKtD,MAAMuD,OAAhG,2BACA,EAAKvD,MAAMT,kBAAX,6DAAmF,EAAKS,MAAMuD,OAA9F,2BACA,EAAKvD,MAAMtB,qBAAX,iEAA0F,EAAKsB,MAAMuD,OAArG,2BACA,EAAKvD,MAAMR,mBAAX,+DAAsF,EAAKQ,MAAMuD,OAAjG,4B,EAIJC,cAAgB,WACZ,EAAKxD,MAAMP,kBAAX,+DAAqF,EAAKO,MAAMuD,OAAhG,2BACA,EAAKvD,MAAMN,cAAX,0DAA4E,EAAKM,MAAMuD,OAAvF,2BACA,EAAKvD,MAAML,eAAX,6DAAgF,EAAKK,MAAMuD,OAA3F,2BACA,EAAKvD,MAAMJ,eAAX,4DAA+E,EAAKI,MAAMuD,OAA1F,4B,mFApB4B,UAAxBxD,KAAKC,MAAMyB,SACX1B,KAAKsD,mBAC0B,OAAxBtD,KAAKC,MAAMyB,UAClB1B,KAAKyD,kB,+BAoBH,IA4DFd,EA5DC,OA+EL,OA7EA,WACI,IAAMxC,EAAWC,SAASsD,iBAAiB,qBAC3C,GAAKvD,EAGU,IAAIG,IAAOH,EAAU,CAChCwD,MAAM,EACNpD,cAAe,EACfqD,eAAgB,EAChBpD,MAAM,EACNC,aAAc,EACdC,UAAU,EACVmD,gBAAgB,EAEhBC,YAAa,CACTC,KAAM,CACFxD,cAAe,EACfqD,eAAgB,GAEpBI,IAAK,CACDzD,cAAe,EACfqD,eAAgB,GAEpBK,IAAK,CACD1D,cAAe,EACfqD,eAAgB,GAEpBM,IAAK,CACD3D,cAAe,EACfqD,eAAgB,GAEpBO,IAAK,CACD5D,cAAe,EACfqD,eAAgB,GAEpBQ,EAAG,CACC7D,cAAe,EACfqD,eAAgB,IAGxB/C,WAAY,CACRC,GAAI,qBACJuD,WAAW,GAEfC,UAAW,CACPxD,GAAI,oBACJyD,MAAM,GAEVxD,WAAY,CACRC,OAAQ,sBACRC,OAAQ,yBAlDpB,GAuDApC,QAAQC,IAAIkB,KAAKC,MAAMuE,cAAcC,SAIT,UAAxBzE,KAAKC,MAAMyB,SACXiB,EACI,6BACI,kBAAC,EAAD,CAAcP,MAAM,WAAWlC,UAAWF,KAAKC,MAAMC,UAAWiB,MAAOnB,KAAKC,MAAMyE,eAAeD,QAAS/F,KAAMsB,KAAKC,MAAMyB,WAC3H,kBAAC,EAAD,CAAcU,MAAM,UAAUlC,UAAWF,KAAKC,MAAMC,UAAWiB,MAAOnB,KAAKC,MAAM0E,cAAcF,QAAS/F,KAAMsB,KAAKC,MAAMyB,WACzH,kBAAC,EAAD,CAAcU,MAAM,cAAclC,UAAWF,KAAKC,MAAMC,UAAWiB,MAAOnB,KAAKC,MAAM2E,iBAAiBH,QAAS/F,KAAMsB,KAAKC,MAAMyB,WAChI,kBAAC,EAAD,CAAcU,MAAM,YAAYlC,UAAWF,KAAKC,MAAMC,UAAWiB,MAAOnB,KAAKC,MAAM4E,eAAeJ,QAAS/F,KAAMsB,KAAKC,MAAMyB,YAErG,OAAxB1B,KAAKC,MAAMyB,WAClBiB,EACI,6BACI,kBAAC,EAAD,CAAcP,MAAM,eAAelC,UAAWF,KAAKC,MAAMC,UAAWiB,MAAOnB,KAAKC,MAAMuE,cAAcC,QAAS/F,KAAMsB,KAAKC,MAAMyB,WAC9H,kBAAC,EAAD,CAAcU,MAAM,UAAUlC,UAAWF,KAAKC,MAAMC,UAAWiB,MAAOnB,KAAKC,MAAM6E,UAAUL,QAAS/F,KAAMsB,KAAKC,MAAMyB,WACrH,kBAAC,EAAD,CAAcU,MAAM,aAAalC,UAAWF,KAAKC,MAAMC,UAAWiB,MAAOnB,KAAKC,MAAM8E,WAAWN,QAAS/F,KAAMsB,KAAKC,MAAMyB,WACzH,kBAAC,EAAD,CAAcU,MAAM,YAAYlC,UAAWF,KAAKC,MAAMC,UAAWiB,MAAOnB,KAAKC,MAAM+E,WAAWP,QAAS/F,KAAMsB,KAAKC,MAAMyB,aAKhI,yBAAKR,UAAU,kBAEX,kBAAC,EAAD,CAAYQ,SAAU1B,KAAKC,MAAMyB,SAAUxB,UAAWF,KAAKC,MAAMC,UAAWiB,MAA+B,OAAxBnB,KAAKC,MAAMyB,SAAoB1B,KAAKC,MAAMuE,cAAcC,QAAUzE,KAAKC,MAAM2E,iBAAiBH,UAEjL,yBAAKvD,UAAU,mBACX,4BAAQA,UAAU,yCAAyC+D,iBAAe,MAAMvC,oBAAkB,KAAKwC,QAAS,WAAQ,EAAKjF,MAAMkF,YAAY,UAAW,EAAK7B,qBAA/J,UACA,4BAAQpC,UAAU,yCAAyC+D,iBAAe,MAAMvC,oBAAkB,KAAKwC,QAAS,WAAQ,EAAKjF,MAAMkF,YAAY,MAAO,EAAK1B,kBAA3J,aAGJ,yBAAKvC,UAAU,uBACVyB,GAGL,kBAAC,EAAD,W,GAxHGH,cA6JJ4C,eA/BS,SAAAC,GAAK,MAAK,CAC9B7B,OAAQ6B,EAAMC,cAAc9B,OAC5BtD,UAAWmF,EAAMC,cAEjB5D,SAAU2D,EAAMF,YAAYzD,SAE5BgD,eAAgBW,EAAM9B,mBACtBoB,cAAeU,EAAM7F,kBACrBoF,iBAAkBS,EAAM1G,qBACxBkG,eAAgBQ,EAAM5F,mBAEtB+E,cAAea,EAAM3F,kBACrBoF,UAAWO,EAAM1F,cACjBoF,WAAYM,EAAMzF,eAClBoF,WAAYK,EAAMxF,mBAGK,SAAAd,GAAQ,MAAK,CACpCoG,YAAa,SAAAzG,GAAI,OAAIK,EAASoG,EAAYzG,KAE1C6E,mBAAoB,SAAA3E,GAAG,OAAIG,EAASwE,EAAmB3E,KACvDY,kBAAmB,SAAAZ,GAAG,OAAIG,EAASS,EAAkBZ,KACrDD,qBAAsB,SAAAC,GAAG,OAAIG,EAASJ,EAAqBC,KAC3Da,mBAAoB,SAAAb,GAAG,OAAIG,EAASU,EAAmBb,KAEvDc,kBAAmB,SAAAd,GAAG,OAAIG,EAASW,EAAkBd,KACrDe,cAAe,SAAAf,GAAG,OAAIG,EAASY,EAAcf,KAC7CgB,eAAgB,SAAAhB,GAAG,OAAIG,EAASa,EAAehB,KAC/CiB,eAAgB,SAAAjB,GAAG,OAAIG,EAASc,EAAejB,QAGpCwG,CAA6C/B,GC7K7CkC,G,MAJG,iBAAO,CACrB7G,KbyCsB,gBciB1B,IAkBe0G,eAlBS,SAAAC,GAAK,MAAK,CAC9B7B,OAAQ6B,EAAMC,cAAc9B,OAC5BgC,UAAWH,EAAME,UAAUC,cAGJ,SAAAzG,GAAQ,MAAK,CACpCwG,UAAW,kBAAMxG,EAASwG,SAYfH,EAvEf,SAAiBnF,GAab,OAFApB,QAAQC,IAAImB,GAGR,yBAAKiB,UAAU,YACX,yBAAKA,UAAS,0BAAqBjB,EAAMuF,UAAY,GAAK,SACtD,kBAAC,IAAD,CAAM/D,GAAI,KAAK,yBAAKmB,IAAI,4DACxB,yBAAK1B,UAAU,iBACX,0BAAMA,UAAU,mBACZ,2BAAOuE,YAAY,YAAYvE,UAAU,wBAAwBxC,KAAK,OAAO2D,KAAK,GAAGb,GAAG,KACxF,4BAAQN,UAAU,yBAAyBxC,KAAK,UAAS,uBAAGwC,UAAU,4BAKlF,4BAAQgE,QAlBkB,WAC9BjF,EAAMsF,aAiB0CrE,UAAS,iDAA4CjB,EAAMuF,UAAY,YAAc,IAAM9G,KAAK,UACxI,0BAAMwC,UAAU,iBACZ,0BAAMA,UAAU,sBAIxB,yBAAKA,UAAS,4BAAuBjB,EAAMuF,UAAY,GAAK,SACxD,kBAAC,IAAD,CAAM/D,GAAI,KACN,yBAAKP,UAAU,0BACX,uBAAGA,UAAU,wBAGrB,kBAAC,IAAD,CAAMO,GAAI,SACN,yBAAKP,UAAU,0BACX,uBAAGA,UAAU,+BAGrB,kBAAC,IAAD,CAAMO,GAAI,aACN,yBAAKP,UAAU,0BACX,uBAAGA,UAAU,gCCjCtBwE,E,YAbX,aAAe,uE,sEAKX,OACI,oCACI,kBAAC,EAAD,W,GARYnD,IAAMC,WCenBmD,MAZf,WAEE,OACE,kBAAC,IAAD,KACE,yBAAKzE,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,S,uBCXF0E,EAAe,CAEjBpC,OAAQ,oCAmBG8B,EAdO,WAAmC,IAAlCD,EAAiC,uDAAzBO,EAAcC,EAAW,uCACpD,OAAQA,EAAOnH,MACX,IjBZuB,kBiBanB,OAAO,eAEA2G,EAFP,GAIOQ,EAAOxG,SAElB,QACI,OAAOgG,IClBbO,EAAe,CACjBlE,SAAU,SAkBCyD,EAfK,WAAmC,IAAlCE,EAAiC,uDAAzBO,EAAcC,EAAW,uCAClD,OAAQA,EAAOnH,MACX,IlBI2B,sBkBHvB,MAAO,CACHgD,SAAU,SAElB,IlBCwB,mBkBApB,MAAO,CACHA,SAAU,MAElB,QACI,OAAO2D,ICbbO,EAAe,CACjBJ,WAAW,GAiBAM,EAdG,WAAmC,IAAlCT,EAAiC,uDAAzBO,EAAcC,EAAW,uCAEhD,OAAQA,EAAOnH,MAEX,InBgCkB,amB/Bd,OAAO,eACA2G,EADP,CAEIG,WAAWH,EAAMG,YAEzB,QACI,OAAOH,IChBbO,EAAe,CACjBnB,QAAS,IAeE9F,EAZc,WAAmC,IAAlC0G,EAAiC,uDAAzBO,EAAcC,EAAW,uCAC3D,OAAQA,EAAOnH,MACX,IpBO8B,yBoBN1B,OAAO,eAEAmH,EAAOxG,SAElB,QACI,OAAOgG,ICZbO,EAAe,CACjBnB,QAAS,IAeEjF,EAZW,WAAmC,IAAlC6F,EAAiC,uDAAzBO,EAAcC,EAAW,uCACxD,OAAQA,EAAOnH,MACX,IrBQ2B,sBqBPvB,OAAO,eACA2G,EADP,GAEOQ,EAAOxG,SAElB,QACI,OAAOgG,ICZbO,EAAe,CACjBnB,QAAS,IAeEhF,EAZY,WAAoC,IAAnC4F,EAAkC,uDAA1BO,EAAcG,EAAY,uCAC1D,OAAQA,EAAQrH,MACZ,ItBS6B,wBsBRzB,OAAO,eACA2G,EADP,GAEOU,EAAQ1G,SAEnB,QACI,OAAOgG,ICZbO,EAAe,CACjBnB,QAAS,IAeElB,EAZY,WAAmC,IAAlC8B,EAAiC,uDAAzBO,EAAcC,EAAW,uCACzD,OAAQA,EAAOnH,MACX,IvBU4B,uBuBTxB,OAAO,eACA2G,EADP,GAEOQ,EAAOxG,SAElB,QACI,OAAOgG,ICZbO,EAAe,CACjBnB,QAAS,IAeEuB,EAZS,WAAmC,IAAlCX,EAAiC,uDAAzBO,EAAcC,EAAW,uCACtD,OAAQA,EAAOnH,MACX,IxBWyB,oBwBVrB,OAAO,eACA2G,EADP,GAEOQ,EAAOxG,SAElB,QACI,OAAOgG,ICZbO,EAAe,CACjBnB,QAAS,IAeEwB,EAZS,WAAmC,IAAlCZ,EAAiC,uDAAzBO,EAAcC,EAAW,uCACtD,OAAQA,EAAOnH,MACX,IzBYyB,oByBXrB,OAAO,eACA2G,EADP,GAEOQ,EAAOxG,SAElB,QACI,OAAOgG,ICZbO,GAAe,CACjBnB,QAAS,IAeEyB,GAZQ,WAAmC,IAAlCb,EAAiC,uDAAzBO,GAAcC,EAAW,uCACrD,OAAQA,EAAOnH,MACX,I1Ba0B,qB0BZtB,OAAO,eACA2G,EADP,GAEOQ,EAAOxG,SAElB,QACI,OAAOgG,ICZbO,GAAe,CACjBnB,QAAS,IAeE0B,GAZS,WAAmC,IAAlCd,EAAiC,uDAAzBO,GAAcC,EAAW,uCACtD,OAAQA,EAAOnH,MACX,I3BcyB,oB2BbrB,OAAO,eACA2G,EADP,GAEOQ,EAAOxG,SAElB,QACI,OAAOgG,ICZbO,GAAe,CACjBnB,QAAS,IAeE2B,GAZY,WAAmC,IAAlCf,EAAiC,uDAAzBO,GAAcC,EAAW,uCACzD,OAAQA,EAAOnH,MACX,I5Be4B,uB4BdxB,OAAO,eACA2G,EADP,GAEOQ,EAAOxG,SAElB,QACI,OAAOgG,ICZbO,GAAe,CACjBnB,QAAS,IAeEyB,GAZQ,WAAmC,IAAlCb,EAAiC,uDAAzBO,GAAcC,EAAW,uCACrD,OAAQA,EAAOnH,MACX,I7BgBwB,mB6BfpB,OAAO,eACA2G,EADP,GAEOQ,EAAOxG,SAElB,QACI,OAAOgG,ICZbO,GAAe,GAcNS,GAZG,WAAmC,IAAlChB,EAAiC,uDAAzBO,GAAcC,EAAW,uCAChD,OAAQA,EAAOnH,MACX,I9BmBkB,a8BlBd,OAAO,eACA2G,EADP,GAEOQ,EAAOxG,SAElB,QACI,OAAOgG,ICVbiB,GAAc,CAChB7B,QAAS,IAeE/E,GAZW,WAAkC,IAAjC2F,EAAgC,uDAAxBiB,GAAaT,EAAW,uCACvD,OAAQA,EAAOnH,MACX,I/BmB4B,uB+BlBxB,OAAO,eACA2G,EADP,GAEOQ,EAAOxG,SAElB,QACI,OAAOgG,ICZbO,GAAe,CACjBnB,QAAS,IAeE9E,GAZO,WAAmC,IAAlC0F,EAAiC,uDAAzBO,GAAcC,EAAW,uCACpD,OAAQA,EAAOnH,MACX,IhCoBuB,kBgCnBnB,OAAO,eACA2G,EADP,GAEOQ,EAAOxG,SAElB,QACI,OAAOgG,ICZbO,GAAe,CACjBnB,QAAS,IAeE7E,GAZQ,WAAmC,IAAlCyF,EAAiC,uDAAzBO,GAAcC,EAAW,uCACrD,OAAQA,EAAOnH,MACX,IjCqB0B,qBiCpBtB,OAAO,eACA2G,EADP,GAEOQ,EAAOxG,SAElB,QACI,OAAOgG,ICZbO,GAAe,CACjBnB,QAAS,IAeE5E,GAZQ,WAAmC,IAAlCwF,EAAiC,uDAAzBO,GAAcC,EAAW,uCACrD,OAAQA,EAAOnH,MACX,IlCsByB,oBkCrBrB,OAAO,eACA2G,EADP,GAEOQ,EAAOxG,SAElB,QACI,OAAOgG,ICZbO,GAAe,GAgBNW,GAZM,WAAmC,IAAlClB,EAAiC,uDAAzBO,GAAcC,EAAW,uCACnD,OAAQA,EAAOnH,MACX,InCuBsB,iBmCtBlB,OAAO,eACA2G,EADP,GAEOQ,EAAOxG,SAElB,QACI,OAAOgG,ICZbO,GAAe,CACjBY,KAAM,IAeKC,GAZM,WAAmC,IAAlCpB,EAAiC,uDAAzBO,GAAcC,EAAW,uCACnD,OAAQA,EAAOnH,MACX,IpCwBsB,iBoCvBlB,OAAO,eACA2G,EADP,GAEOQ,EAAOxG,SAElB,QACI,OAAOgG,ICZbO,GAAe,CACjBnB,QAAS,IAeEiC,GAZO,WAAmC,IAAlCrB,EAAiC,uDAAzBO,GAAcC,EAAW,uCACpD,OAAQA,EAAOnH,MACX,IrCyBuB,kBqCxBnB,OAAO,eACA2G,EADP,GAEOQ,EAAOxG,SAElB,QACI,OAAOgG,ICZbO,GAAe,CACjBnB,QAAS,IAeEkC,GAZM,WAAmC,IAAlCtB,EAAiC,uDAAzBO,GAAcC,EAAW,uCACnD,OAAQA,EAAOnH,MACX,ItC0BsB,iBsCzBlB,OAAO,eACA2G,EADP,GAEOQ,EAAOxG,SAElB,QACI,OAAOgG,ICXbO,GAAe,CACjBnB,QAAS,IAeEmC,GAZS,WAAmC,IAAlCvB,EAAiC,uDAAzBO,GAAcC,EAAW,uCACtD,OAAQA,EAAOnH,MACX,IvC0ByB,oBuCzBrB,OAAO,eACA2G,EADP,GAEOQ,EAAOxG,SAElB,QACI,OAAOgG,ICZbO,GAAe,CACjBnB,QAAS,IAeEoC,GAZI,WAAmC,IAAlCxB,EAAiC,uDAAzBO,GAAcC,EAAW,uCACjD,OAAQA,EAAOnH,MACX,IxC2BoB,ewC1BhB,OAAO,eACA2G,EADP,GAEOQ,EAAOxG,SAElB,QACI,OAAOgG,ICbbO,GAAe,CACjBnB,QAAS,IAeEqC,GAZU,WAAmC,IAAlCzB,EAAiC,uDAAzBO,GAAcC,EAAW,uCACvD,OAAQA,EAAOnH,MACX,IzC8B0B,qByC7BtB,OAAO,eACA2G,EADP,GAEOQ,EAAOxG,SAElB,QACI,OAAOgG,ICZbO,GAAe,CACjBY,KAAM,IAeKO,GAZkB,WAAmC,IAAlC1B,EAAiC,uDAAzBO,GAAcC,EAAW,uCAC/D,OAAQA,EAAOnH,MACX,I1C+BmC,8B0C9B/B,OAAO,eACA2G,EADP,GAEOQ,EAAOxG,SAElB,QACI,OAAOgG,ICXbO,GAAe,CACjBnB,QAAS,IAeEuC,GAZU,WAAmC,IAAlC3B,EAAiC,uDAAzBO,GAAcC,EAAW,uCACvD,OAAQA,EAAOnH,MACX,I3C+B0B,qB2C9BtB,OAAO,eACA2G,EADP,GAEOQ,EAAOxG,SAElB,QACI,OAAOgG,ICbbO,GAAe,CACjBnB,QAAS,IAeEwC,GAZK,WAAmC,IAAlC5B,EAAiC,uDAAzBO,GAAcC,EAAW,uCAClD,OAAQA,EAAOnH,MACX,I5CkCoB,e4CjChB,OAAO,eACA2G,EADP,GAEOQ,EAAOxG,SAElB,QACI,OAAOgG,IC6EJ6B,GA7CKC,YAAgB,CAChC7B,cAAe8B,EASfjC,cACAI,YAIA5G,uBACAa,oBACAC,qBACA8D,qBACAyC,kBACAC,kBACAoB,oBACAlB,mBACAmB,qBACApB,kBACAG,aAEA3G,qBACAC,iBACAC,kBACAC,kBACA0G,gBACAE,gBACAC,iBACAC,gBACAY,kBACAV,cAEAC,oBACAC,4BACAC,oBAEAC,iBC/EEO,GAAa,CAACC,KACdC,GAAmBC,OAAOC,sCAAwCC,IAMzDC,GALDC,YAAYb,GAAaQ,GAAiBM,IAAe,WAAf,EAAmBR,MCF3ES,IAASC,OACL,kBAAC,IAAD,CAAUJ,MAAOA,IACb,kBAAC,EAAD,OAEF1H,SAAS+H,eAAe,W","file":"static/js/main.07c20b54.chunk.js","sourcesContent":["import { SET_ITEM_TYPE_MOVIE, SET_ITEM_TYPE_TV } from './types';\n\nconst setItemTypeMovie = type => ({\n    type: type === 'TV' ? SET_ITEM_TYPE_TV : SET_ITEM_TYPE_MOVIE\n})\n\nexport default setItemTypeMovie;","export const POST_MDB_CONFIG = 'POST_MDB_CONFIG'\n\nexport const GET_REQUEST_TOKEN = 'GET_REQUEST_TOKEN'\nexport const GET_SESSION = 'GET_SESSION'\nexport const DELETE_SESSION = 'DELETE_SESSION'\nexport const GET_GUEST_SESSION = 'GET_GUEST_SESSION'\nexport const TOGGLE_LOG_IN_STATUS = 'TOGGLE_LOG_IN_STATUS'\nexport const GET_USER_DETAILS = 'GET_USER_DETAILS'\n\nexport const POST_MOVIE_GENRES = 'POST_MOVIE_GENRES';\nexport const POST_TV_GENRES = 'POST_TV_GENRES';\n\nexport const SET_ITEM_TYPE_MOVIE = 'SET_ITEM_TYPE_MOVIE';\nexport const SET_ITEM_TYPE_TV = 'SET_ITEM_TYPE_TV';\n\nexport const POST_MOVIES_NOWPLAYING = 'POST_MOVIES_NOWPLAYING'\nexport const POST_MOVIES_POPULAR = 'POST_MOVIES_POPULAR'\nexport const POST_MOVIES_TOP_RATED = 'POST_MOVIES_TOP_RATED';\nexport const POST_MOVIES_UPCOMING = 'POST_MOVIES_UPCOMING';\nexport const GET_MOVIE_DETAILS = 'GET_MOVIE_DETAILS';\nexport const GET_MOVIE_CREDITS = 'GET_MOVIE_CREDITS';\nexport const GET_MOVIE_TRAILERS = 'GET_MOVIE_TRAILERS';\nexport const GET_MOVIE_REVIEWS = 'GET_MOVIE_REVIEWS';\nexport const GET_MOVIE_FAVOURITES = 'GET_MOVIE_FAVOURITES';\nexport const GET_MOVIES_RATED = 'GET_MOVIES_RATED';\nexport const RATE_MOVIE = 'RATE_MOVIE';\n\nexport const POST_TV_AIRING_TODAY = 'POST_TV_AIRING_TODAY';\nexport const POST_TV_POPULAR = 'POST_TV_POPULAR';\nexport const POST_TV_ON_THE_AIR = 'POST_TV_ON_THE_AIR';\nexport const POST_TV_TOP_RATED = 'POST_TV_TOP_RATED';\nexport const GET_TV_DETAILS = 'GET_TV_DETAILS';\nexport const GET_TV_CREDITS = 'GET_TV_CREDITS';\nexport const GET_TV_TRAILERS = 'GET_TV_TRAILERS';\nexport const GET_TV_REVIEWS = 'GET_TV_REVIEWS';\nexport const GET_TV_FAVOURITES = 'GET_TV_FAVOURITES';\nexport const GET_TV_RATED = 'GET_TV_RATED';\n\nexport const GET_PEOPLE_DETAILS = 'GET_PEOPLE_DETAILS';\nexport const GET_PEOPLE_COMBINED_CREDITS = 'GET_PEOPLE_COMBINED_CREDITS';\nexport const GET_PEOPLE_POPULAR = 'GET_PEOPLE_POPULAR';\n\nexport const GET_DISCOVER = 'GET_DISCOVER';\n\nexport const TOGGLE_NAV = 'TOGGLE_NAV';\nexport const SEARCH_DATA = 'SEARCH_DATA';\nexport const POST_SEARCH_RESULTS = 'POST_SEARCH_RESULTS';","import { POST_MOVIES_NOWPLAYING } from '../types';\n\nconst saveMoviesNowPlaying = payload => ({\n    type: POST_MOVIES_NOWPLAYING,\n    payload\n});\n\nconst postMoviesNowPlaying = url => {\n    console.log(url)\n    return dispatch => {\n        fetch(url)\n            .then(res => res.json())\n            .then(data => dispatch(saveMoviesNowPlaying(data)))\n            .catch(error => console.log(error));\n    };\n};\n\nexport default postMoviesNowPlaying;","import { POST_MOVIES_POPULAR } from '../types';\n\nconst saveMoviesPopular = payload => ({\n    type: POST_MOVIES_POPULAR,\n    payload\n});\n\nconst postMoviesPopular = url => {\n    return dispatch => {\n        fetch(url)\n            .then(res => res.json())\n            .then(data => dispatch(saveMoviesPopular(data)))\n            .catch(error => {\n                console.log(error);\n            })\n    }\n};\n\nexport default postMoviesPopular;","import { POST_MOVIES_TOP_RATED } from '../types';\n\nconst saveMoviesTopRated = payload => ({\n    type: POST_MOVIES_TOP_RATED,\n    payload\n});\n\nconst postMoviesTopRated = url => {\n    return dispatch => {\n        fetch(url)\n            .then(res => res.json())\n            .then(data => dispatch(saveMoviesTopRated(data)))\n            .catch(error => console.log(error))\n    }\n}\n\nexport default postMoviesTopRated;","import { POST_MOVIES_UPCOMING } from '../types';\n\nconst saveMoviesTopRated = payload => ({\n    type: POST_MOVIES_UPCOMING,\n    payload\n})\n\nconst postMoviesTopRated = url => {\n    return dispatch => {\n        fetch(url)\n            .then(res => res.json())\n            .then(data => dispatch(saveMoviesTopRated(data)))\n            .catch(error => console.log(error))\n    }\n}\n\nexport default postMoviesTopRated;","import { POST_TV_AIRING_TODAY } from '../types';\n\nconst saveTVAiringToday = payload => ({\n    type: POST_TV_AIRING_TODAY,\n    payload\n});\n\nconst postTVAiringToday = url => {\n    return dispatch => {\n        fetch(url)\n            .then(res => res.json())\n            .then(data => dispatch(saveTVAiringToday(data)))\n            .catch(error => console.log(error))\n    }\n};\n\nexport default postTVAiringToday;","import { POST_TV_POPULAR } from '../types';\n\nconst saveTVPopular = payload => ({\n    type: POST_TV_POPULAR,\n    payload\n});\n\nconst postTVPopular = url => {\n    return dispatch => {\n        fetch(url)\n            .then(res => res.json())\n            .then(data => dispatch(saveTVPopular(data)))\n            .catch(error => console.log(error))\n    }\n};\n\nexport default postTVPopular;","import { POST_TV_ON_THE_AIR } from '../types';\n\nconst saveTVOnTheAir = payload => ({\n    type: POST_TV_ON_THE_AIR,\n    payload\n});\n\nconst postTVOnTheAir = url => {\n    return dispatch => {\n        fetch(url)\n            .then(res => res.json())\n            .then(data => dispatch(saveTVOnTheAir(data)))\n            .catch(error => console.log(error))\n    }\n};\n\nexport default postTVOnTheAir;","import { POST_TV_TOP_RATED } from '../types';\n\nconst saveTVTopRated = payload => ({\n    type: POST_TV_TOP_RATED,\n    payload\n});\n\nconst postTVTopRated = url => {\n    return dispatch => {\n        fetch(url)\n            .then(res => res.json())\n            .then(data => dispatch(saveTVTopRated(data)))\n            .catch(error => console.log(error))\n    }\n}\n\nexport default postTVTopRated;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Swiper from 'swiper';\n\nimport './HomeHeader.scss';\n\nclass HomeHeader extends React.Component {\n\n    render() {\n        const config = this.props.MDBConfig;\n\n        // Initiates carousels\n        (() => {\n            const sliderEl = document.querySelector('.home-swiper-container');\n            if (!sliderEl) {\n                return;\n            }\n            const slider = new Swiper(sliderEl, {\n                slidesPerView: 1,\n                loop: true,\n                spaceBetween: 0,\n                observer: true,\n\n                autoplay: {\n                    delay: 10000,\n                },\n\n                pagination: {\n                    el: '.home-swiper-pagination',\n                    type: 'progressbar',\n                },\n                navigation: {\n                    nextEl: '.home-swiper-button-next',\n                    prevEl: '.home-swiper-button-prev',\n                }\n            });\n        })();\n\n        return (\n            <div className=\"home-swiper-container\">\n\n                {/* Loops through items and creates a carousel item */}\n                <div className=\"swiper-wrapper\">\n                    {this.props.items.map((item, i) => {\n                        if (i > 3 && i < 7) {\n                            return (\n                                <Link key={item.id} to={`/details/${this.props.itemType.toLowerCase()}/${item.id}`} className=\"swiper-slide\" style={{\n                                    background: `linear-gradient(\n                rgba(0, 0, 0, 0.6),\n                rgba(0, 0, 0, 0.6)\n              ) center center no-repeat, #fff url(https://image.tmdb.org/t/p/w1280/${config.images ? config.images.secure_base_url : ''}${config.images ? config.images.backdrop_sizes[2] : ''}${item.backdrop_path}) center top no-repeat`, backgroundSize: 'cover, cover'\n                                }}>\n                                    <div>\n                                        <p className=\"swiper-slide__category\">{'Latest'.toUpperCase()}</p>\n                                        <h2 className=\"swiper-slide__title\">{this.props.itemType === 'MOVIE' ? item.title : item.name}</h2>\n                                        <p className=\"swiper-slide__item-duration\">{item.vote_average} Rating</p>\n                                    </div>\n                                </Link>\n                            );\n                        }\n                    })}\n                </div>\n\n                <div className=\"home-swiper-pagination\"></div>\n\n            </div>\n        );\n    }\n};\n\n\nexport default HomeHeader;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './ItemCarousel.scss';\n\nclass ItemCarousel extends Component {\n\n    render() {\n        const config = this.props.MDBConfig;\n\n        return (\n            <div className=\"carousel-container wow fadeIn\" data-wow-duration=\"3s\">\n\n                <div className=\"swiper-container\">\n                    <h2 className=\"swiper-container__title\">{this.props.title}</h2>\n\n                    {/* Loops through item data and creates a carousel item */}\n                    <div className=\"swiper-wrapper\">\n                        {this.props.items.map((movie, i) => (\n\n                            <div key={movie.id} className=\"swiper-slide\" >\n                                <Link to={`/details/${this.props.type.toLowerCase()}/${movie.id}`} >\n                                    <img className=\"swiper-slide__image\" src={`https://image.tmdb.org/t/p/w154/${config.images ? config.images.secure_base_url : ''}${config.images ? config.images.poster_sizes[1] : ''}${movie.poster_path}`} alt={movie.title} />\n                                    <h3 className=\"swiper-slide__title\">{movie.title}</h3>\n                                    <h3 className=\"swiper-slide__title\">{movie.original_name}</h3>\n                                    <p className=\"swiper-slide-rating\">\n                                        <svg className=\"swiper-slide-rating__icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M256 372.686L380.83 448l-33.021-142.066L458 210.409l-145.267-12.475L256 64l-56.743 133.934L54 210.409l110.192 95.525L131.161 448z\" /></svg>\n                                        {movie.vote_average}\n                                    </p>\n                                </Link>\n                            </div>\n\n                        ))}\n                    </div>\n                    <div className=\"swiper-button-prev swiper-button-white\"></div>\n                    <div className=\"swiper-button-next swiper-button-white\"></div>\n                </div>\n\n                <hr className=\"carousel-container__separator\" />\n            </div>\n        );\n    }\n}\n\nexport default ItemCarousel;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n// SCSS\nimport './MainFooter.scss';\n\nfunction MainFooter() {\n    return (\n        <footer className=\"main-footer\">\n            <section className=\"main-footer-left\">\n                <div className=\"main-footer-left-header\">\n                    <h1 className=\"main-footer-left-header-name\">Movie App</h1>\n                    <hr />\n                    <Link to=\"/\">Home</Link>\n                    <Link to=\"/user\">Profile</Link>\n                    <Link to=\"/discover\">Discover</Link>\n                </div>\n                <div className=\"main-footer-left-contacts\">\n                    <div className=\"main-footer-left-contacts-item\">\n                        <h3 className=\"main-footer-portfolio-header\">Portfolio:</h3>\n                        <p><Link to=\"/discover\">3drdsh3in/github.io</Link></p>\n                    </div>\n                    <div className=\"main-footer-left-contacts-item\">\n                        <h3 className=\"main-footer-phone-header\">Phone Number:</h3>\n                        <p>777-777-7777</p>\n                    </div>\n                </div>\n            </section>\n            <section className=\"main-footer-right\">\n\n                <div className=\"main-footer-right-icons\">\n                    <Link to=\"\"><i className=\"fab fa-twitter fa-2x\"></i></Link>\n                    <Link to=\"\"><i className=\"fab fa-facebook-f fa-2x\"></i></Link>\n                    <Link to=\"\"><i className=\"fas fa-book fa-2x\"></i></Link>\n                </div>\n\n                <img className=\"main-footer-mdb-logo\" src=\"https://www.themoviedb.org/assets/2/v4/logos/powered-by-rectangle-green-dcada16968ed648d5eb3b36bbcfdd8cdf804f723dcca775c8f2bf4cea025aad6.svg\" />\n\n                <div className=\"main-footer-right-copyright\">\n                    <p>Copyright &copy;2020 by Edward Shen</p>\n                </div>\n            </section>\n        </footer>\n    )\n}\n\nexport default MainFooter;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport setItemType from '../../actions/setItemType';\n\nimport postMoviesNowPlaying from '../../actions/movieActions/postMoviesNowPlaying';\nimport postMoviesPopular from '../../actions/movieActions/postMoviesPopular';\nimport postMoviesTopRated from '../../actions/movieActions/postMoviesTopRated';\nimport postMoviesUpcoming from '../../actions/movieActions/postMoviesUpcoming';\n\nimport postTVAiringToday from '../../actions/TVActions/postTVAiringToday';\nimport postTVPopular from '../../actions/TVActions/postTVPopular';\nimport postTVOnTheAir from '../../actions/TVActions/postTVOnTheAir';\nimport postTVTopRated from '../../actions/TVActions/postTVTopRated';\n\nimport Swiper from 'swiper';\nimport HomeHeader from '../HomeHeader/HomeHeader';\nimport ItemCarousel from '../ItemCarousel/ItemCarousel';\nimport MainFooter from '../MainFooter/MainFooter';\n\nimport './Home.scss';\n\nclass Home extends Component {\n\n    // Checks which type of data to fetch\n    componentDidMount() {\n        if (this.props.itemType === 'MOVIE') {\n            this.handleMovieFetch();\n        } else if (this.props.itemType === 'TV') {\n            this.handleTVFetch();\n        }\n    }\n\n    // fetches movie data\n    handleMovieFetch = () => {\n        this.props.postMoviesUpcoming(`https://api.themoviedb.org/3/movie/upcoming?api_key=${this.props.apiKey}&language=en-US&page=1`);\n        this.props.postMoviesPopular(`https://api.themoviedb.org/3/movie/popular?api_key=${this.props.apiKey}&language=en-US&page=1`);\n        this.props.postMoviesNowPlaying(`https://api.themoviedb.org/3/movie/now_playing?api_key=${this.props.apiKey}&language=en-US&page=1`);\n        this.props.postMoviesTopRated(`https://api.themoviedb.org/3/movie/top_rated?api_key=${this.props.apiKey}&language=en-US&page=1`);\n    }\n\n    // fetches tv data\n    handleTVFetch = () => {\n        this.props.postTVAiringToday(`https://api.themoviedb.org/3/tv/airing_today?api_key=${this.props.apiKey}&language=en-US&page=1`);\n        this.props.postTVPopular(`https://api.themoviedb.org/3/tv/popular?api_key=${this.props.apiKey}&language=en-US&page=1`);\n        this.props.postTVOnTheAir(`https://api.themoviedb.org/3/tv/on_the_air?api_key=${this.props.apiKey}&language=en-US&page=1`);\n        this.props.postTVTopRated(`https://api.themoviedb.org/3/tv/top_rated?api_key=${this.props.apiKey}&language=en-US&page=1`);\n    }\n\n    render() {\n        // Initiates carousels\n        (() => {\n            const sliderEl = document.querySelectorAll('.swiper-container');\n            if (!sliderEl) {\n                return;\n            }\n            const slider = new Swiper(sliderEl, {\n                init: true,\n                slidesPerView: 3,\n                slidesPerGroup: 3,\n                loop: false,\n                spaceBetween: 5,\n                observer: true,\n                centeredSlides: false,\n\n                breakpoints: {\n                    1145: {\n                        slidesPerView: 6,\n                        slidesPerGroup: 6\n                    },\n                    992: {\n                        slidesPerView: 5,\n                        slidesPerGroup: 5\n                    },\n                    768: {\n                        slidesPerView: 4,\n                        slidesPerGroup: 4\n                    },\n                    594: {\n                        slidesPerView: 3,\n                        slidesPerGroup: 3\n                    },\n                    300: {\n                        slidesPerView: 2,\n                        slidesPerGroup: 2\n                    },\n                    0: {\n                        slidesPerView: 1,\n                        slidesPerGroup: 1\n                    },\n                },\n                pagination: {\n                    el: '.swiper-pagination',\n                    clickable: true\n                },\n                scrollbar: {\n                    el: '.swiper-scrollbar',\n                    hide: true\n                },\n                navigation: {\n                    nextEl: '.swiper-button-next',\n                    prevEl: '.swiper-button-prev',\n                }\n            });\n        })();\n\n        console.log(this.props.TVAiringToday.results)\n\n        // Displays correct carousels\n        let movie;\n        if (this.props.itemType === 'MOVIE') {\n            movie =\n                <div>\n                    <ItemCarousel title=\"Upcoming\" MDBConfig={this.props.MDBConfig} items={this.props.moviesUpcoming.results} type={this.props.itemType} />\n                    <ItemCarousel title=\"Popular\" MDBConfig={this.props.MDBConfig} items={this.props.moviesPopular.results} type={this.props.itemType} />\n                    <ItemCarousel title=\"Now Playing\" MDBConfig={this.props.MDBConfig} items={this.props.moviesNowPlaying.results} type={this.props.itemType} />\n                    <ItemCarousel title=\"Top Rated\" MDBConfig={this.props.MDBConfig} items={this.props.moviesTopRated.results} type={this.props.itemType} />\n                </div>;\n        } else if (this.props.itemType === 'TV') {\n            movie =\n                <div>\n                    <ItemCarousel title=\"Airing Today\" MDBConfig={this.props.MDBConfig} items={this.props.TVAiringToday.results} type={this.props.itemType} />\n                    <ItemCarousel title=\"Popular\" MDBConfig={this.props.MDBConfig} items={this.props.TVPopular.results} type={this.props.itemType} />\n                    <ItemCarousel title=\"On The Air\" MDBConfig={this.props.MDBConfig} items={this.props.TVOnTheAir.results} type={this.props.itemType} />\n                    <ItemCarousel title=\"Top Rated\" MDBConfig={this.props.MDBConfig} items={this.props.TVTopRated.results} type={this.props.itemType} />\n                </div>;\n        }\n\n        return (\n            <div className=\"home-container\">\n\n                <HomeHeader itemType={this.props.itemType} MDBConfig={this.props.MDBConfig} items={this.props.itemType === 'TV' ? this.props.TVAiringToday.results : this.props.moviesNowPlaying.results} />\n\n                <div className=\"item-controller\">\n                    <button className=\"item-controller__switch wow fadeInDown\" data-wow-delay=\".5s\" data-wow-duration=\"1s\" onClick={() => { this.props.setItemType('MOVIES'); this.handleMovieFetch(); }}>Movies</button>\n                    <button className=\"item-controller__switch wow fadeInDown\" data-wow-delay=\".5s\" data-wow-duration=\"1s\" onClick={() => { this.props.setItemType('TV'); this.handleTVFetch(); }}>TV Shows</button>\n                </div>\n\n                <div className=\"home-container-main\">\n                    {movie}\n                </div>\n\n                <MainFooter />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    apiKey: state.PostMDBConfig.apiKey,\n    MDBConfig: state.PostMDBConfig,\n\n    itemType: state.setItemType.itemType,\n\n    moviesUpcoming: state.postMoviesUpcoming,\n    moviesPopular: state.postMoviesPopular,\n    moviesNowPlaying: state.postMoviesNowPlaying,\n    moviesTopRated: state.postMoviesTopRated,\n\n    TVAiringToday: state.postTVAiringToday,\n    TVPopular: state.postTVPopular,\n    TVOnTheAir: state.postTVOnTheAir,\n    TVTopRated: state.postTVTopRated,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setItemType: type => dispatch(setItemType(type)),\n\n    postMoviesUpcoming: url => dispatch(postMoviesUpcoming(url)),\n    postMoviesPopular: url => dispatch(postMoviesPopular(url)),\n    postMoviesNowPlaying: url => dispatch(postMoviesNowPlaying(url)),\n    postMoviesTopRated: url => dispatch(postMoviesTopRated(url)),\n\n    postTVAiringToday: url => dispatch(postTVAiringToday(url)),\n    postTVPopular: url => dispatch(postTVPopular(url)),\n    postTVOnTheAir: url => dispatch(postTVOnTheAir(url)),\n    postTVTopRated: url => dispatch(postTVTopRated(url)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import { TOGGLE_NAV } from './types';\n\nconst toggleNav = () => ({\n    type: TOGGLE_NAV\n});\n\nexport default toggleNav","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom'\n\n// SCSS Stylesheets\nimport './MainNav.scss';\nimport toggleNav from '../../actions/toggleNav';\n\nfunction MainNav(props) {\n\n    // Add animations to page upon mount completion [Comeback when page is properly structured]\n    // useEffect(() => {\n\n    // }, [])\n\n    const handleHamburgerClickEvent = () => {\n        props.toggleNav();\n    }\n\n    console.log(props);\n\n    return (\n        <nav className=\"nav-main\">\n            <div className={`nav-top-section ${props.navStatus ? '' : 'hide'}`}>\n                <Link to={'/'}><img src=\"https://img.icons8.com/cotton/64/000000/3d-glasses.png\"></img></Link>\n                <div className=\"nav-searchbar\">\n                    <form className=\"nav-search-form\">\n                        <input placeholder=\"search...\" className=\"nav-search-form-input\" type=\"text\" name=\"\" id=\"\" />\n                        <button className=\"nav-search-form-button\" type=\"submit\"><i className=\"fas fa-search fa-2x\"></i></button>\n                    </form>\n                </div>\n            </div>\n\n            <button onClick={handleHamburgerClickEvent} className={`hamburger hamburger--spin js-hamburger ${props.navStatus ? 'is-active' : ''}`} type=\"button\">\n                <span className=\"hamburger-box\">\n                    <span className=\"hamburger-inner\"></span>\n                </span>\n            </button>\n\n            <div className={`nav-split-section ${props.navStatus ? '' : 'hide'}`}>\n                <Link to={'/'}>\n                    <div className=\"nav-split-section-item\">\n                        <i className=\"fas fa-home fa-2x\"></i>\n                    </div>\n                </Link>\n                <Link to={'/user'}>\n                    <div className=\"nav-split-section-item\">\n                        <i className=\"fas fa-user-circle fa-2x\"></i>\n                    </div>\n                </Link>\n                <Link to={'/discover'}>\n                    <div className=\"nav-split-section-item\">\n                        <i className=\"far fa-compass fa-2x\"></i>\n                    </div>\n                </Link>\n            </div>\n        </nav>\n    )\n\n}\n// Give the component props some important state properties via the following container\nconst mapStateToProps = state => ({\n    apiKey: state.PostMDBConfig.apiKey,\n    navStatus: state.toggleNav.navStatus\n})\n// Give the component props the important toggleNav function via the following container.\nconst mapDispatchToProps = dispatch => ({\n    toggleNav: () => dispatch(toggleNav())\n})\n\n// \n// const tempVariable = connect(mapStateToProps, mapDispatchToProps);\n// console.log(tempVariable)\n// console.log(tempVariable(MainNav));\n// console.log(MainNav);\n// export default tempVariable(MainNav);\n\n// Get from the current redux store the state/dispatches & map them to props\n// ...before injecting them into the MainNav component {Thus completing it as a container component}.\nexport default connect(mapStateToProps, mapDispatchToProps)(MainNav);","import React from 'react';\n\nimport MainNav from '../MainNav/MainNav';\n\n\nclass SearchResults extends React.Component {\n    constructor() {\n        super()\n    }\n\n    render() {\n        return (\n            <>\n                <MainNav />\n            </>\n        )\n    }\n}\n\nexport default SearchResults;","import React from 'react';\n\nimport './App.css';\nimport Home from './components/Home/Home';\nimport SearchResults from './components/SearchResults/SearchResults';\n\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nfunction App() {\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <SearchResults />\n        <Home />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","\nimport { POST_MDB_CONFIG } from '../actions/types';\n\nconst initialState = {\n    // Your key:\n    apiKey: 'fb8a39c9807f2120f494db319897180d',\n    // Alan's API key:\n    // apiKey: '12a5356516535d4d67654a936a088c1b'\n};\n\nconst PostMDBConfig = (state = initialState, action) => {\n    switch (action.type) {\n        case POST_MDB_CONFIG:\n            return {\n                // The Initial State /w the apiKey component:\n                ...state,\n                // The entire ... idk for now lol.\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n}\n\nexport default PostMDBConfig;","import { SET_ITEM_TYPE_MOVIE, SET_ITEM_TYPE_TV } from '../actions/types';\n\nconst initialState = {\n    itemType: 'MOVIE'\n};\n\nconst setItemType = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_ITEM_TYPE_MOVIE:\n            return {\n                itemType: 'MOVIE'\n            };\n        case SET_ITEM_TYPE_TV:\n            return {\n                itemType: 'TV'\n            };\n        default:\n            return state;\n    }\n};\n\nexport default setItemType;","\nimport { TOGGLE_NAV } from '../actions/types';\n\n// Initial State of the Navbar hamburger toggle is false.\nconst initialState = {\n    navStatus: false\n};\n\nconst toggleMav = (state = initialState, action) => {\n    // console.log('Nav Status Initialized')\n    switch (action.type) {\n        // In the case a TOGGLE_NAV action is called ...\n        case TOGGLE_NAV:\n            return {\n                ...state,\n                navStatus: state.navStatus ? false : true\n            }\n        default:\n            return state;\n    }\n}\n\nexport default toggleMav;","import { POST_MOVIES_NOWPLAYING } from '../../actions/types';\n\nconst initialState = {\n    results: []\n}\n\nconst postMoviesNowPlaying = (state = initialState, action) => {\n    switch (action.type) {\n        case POST_MOVIES_NOWPLAYING:\n            return ({\n                // ...state,\n                ...action.payload\n            })\n        default:\n            return state;\n    }\n}\n\nexport default postMoviesNowPlaying;","import { POST_MOVIES_POPULAR } from '../../actions/types';\n\nconst initialState = {\n    results: []\n}\n\nconst postMoviesPopular = (state = initialState, action) => {\n    switch (action.type) {\n        case POST_MOVIES_POPULAR:\n            return {\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nexport default postMoviesPopular;","import { POST_MOVIES_TOP_RATED } from '../../actions/types';\n\nconst initialState = {\n    results: []\n};\n\nconst postMoviesTopRated = (state = initialState, actions) => {\n    switch (actions.type) {\n        case POST_MOVIES_TOP_RATED:\n            return {\n                ...state,\n                ...actions.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default postMoviesTopRated;","import { POST_MOVIES_UPCOMING } from '../../actions/types';\n\nconst initialState = {\n    results: []\n};\n\nconst postMoviesUpcoming = (state = initialState, action) => {\n    switch (action.type) {\n        case POST_MOVIES_UPCOMING:\n            return {\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state\n    }\n};\n\nexport default postMoviesUpcoming;","import { GET_MOVIE_DETAILS } from '../../actions/types';\n\nconst initialState = {\n    results: []\n}\n\nconst getMovieDetails = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_MOVIE_DETAILS:\n            return {\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nexport default getMovieDetails;","import { GET_MOVIE_CREDITS } from '../../actions/types';\n\nconst initialState = {\n    results: []\n}\n\nconst getMovieCredits = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_MOVIE_CREDITS:\n            return {\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nexport default getMovieCredits;","import { GET_MOVIE_TRAILERS } from '../../actions/types';\n\nconst initialState = {\n    results: []\n}\n\nconst getMoviesRated = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_MOVIE_TRAILERS:\n            return {\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nexport default getMoviesRated;","import { GET_MOVIE_REVIEWS } from '../../actions/types';\n\nconst initialState = {\n    results: []\n}\n\nconst getMovieReviews = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_MOVIE_REVIEWS:\n            return {\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nexport default getMovieReviews;","import { GET_MOVIE_FAVOURITES } from '../../actions/types';\n\nconst initialState = {\n    results: []\n}\n\nconst getMovieFavourites = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_MOVIE_FAVOURITES:\n            return {\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nexport default getMovieFavourites;","import { GET_MOVIES_RATED } from '../../actions/types';\n\nconst initialState = {\n    results: []\n};\n\nconst getMoviesRated = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_MOVIES_RATED:\n            return {\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nexport default getMoviesRated;","import { RATE_MOVIE } from '../../actions/types'\n\nconst initialState = {};\n\nconst rateMovie = (state = initialState, action) => {\n    switch (action.type) {\n        case RATE_MOVIE:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default rateMovie;","import { POST_TV_AIRING_TODAY } from '../../actions/types';\n\nconst intialState = {\n    results: []\n};\n\nconst postTVAiringToday = (state = intialState, action) => {\n    switch (action.type) {\n        case POST_TV_AIRING_TODAY:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default postTVAiringToday;","import { POST_TV_POPULAR } from '../../actions/types';\n\nconst initialState = {\n    results: []\n};\n\nconst postTVPopular = (state = initialState, action) => {\n    switch (action.type) {\n        case POST_TV_POPULAR:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default postTVPopular;","import { POST_TV_ON_THE_AIR } from '../../actions/types';\n\nconst initialState = {\n    results: []\n};\n\nconst postTVOnTheAir = (state = initialState, action) => {\n    switch (action.type) {\n        case POST_TV_ON_THE_AIR:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default postTVOnTheAir;","import { POST_TV_TOP_RATED } from '../../actions/types';\n\nconst initialState = {\n    results: []\n};\n\nconst postTVTopRated = (state = initialState, action) => {\n    switch (action.type) {\n        case POST_TV_TOP_RATED:\n            return {\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state;\n    }\n};\n\nexport default postTVTopRated;","import { GET_TV_DETAILS } from '../../actions/types';\n\nconst initialState = {\n\n};\n\nconst getTVDetails = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_TV_DETAILS:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default getTVDetails;","import { GET_TV_CREDITS } from '../../actions/types'\n\nconst initialState = {\n    cast: []\n};\n\nconst getTVCredits = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_TV_CREDITS:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default getTVCredits;","import { GET_TV_TRAILERS } from '../../actions/types';\n\nconst initialState = {\n    results: []\n};\n\nconst getTVTrailers = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_TV_TRAILERS:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default getTVTrailers;","import { GET_TV_REVIEWS } from '../../actions/types';\n\nconst initialState = {\n    results: []\n};\n\nconst getTVReviews = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_TV_REVIEWS:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default getTVReviews;","\nimport { GET_TV_FAVOURITES } from '../../actions/types';\n\nconst initialState = {\n    results: []\n};\n\nconst getTVFavourites = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_TV_FAVOURITES:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default getTVFavourites;","\nimport { GET_TV_RATED } from '../../actions/types';\n\nconst initialState = {\n    results: []\n};\n\nconst getTVRated = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_TV_RATED:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default getTVRated;\n","import { GET_PEOPLE_DETAILS } from '../../actions/types';\n\nconst initialState = {\n    results: []\n};\n\nconst getPeopleDetails = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_PEOPLE_DETAILS:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default getPeopleDetails;","import { GET_PEOPLE_COMBINED_CREDITS } from '../../actions/types';\n\nconst initialState = {\n    cast: []\n};\n\nconst getPeopleCombinedCredits = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_PEOPLE_COMBINED_CREDITS:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default getPeopleCombinedCredits;","\nimport { GET_PEOPLE_POPULAR } from '../../actions/types';\n\nconst initialState = {\n    results: []\n};\n\nconst getPeoplePopular = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_PEOPLE_POPULAR:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default getPeoplePopular;","import { GET_DISCOVER } from '../actions/types';\n\nconst initialState = {\n    results: []\n};\n\nconst getDiscover = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_DISCOVER:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n}\n\nexport default getDiscover;","\nimport { combineReducers } from 'redux';\nimport PostMDBConfigReducer from './PostMDBConfigReducer';\n\n// import getRequestToken from './authenticationReducers/getRequestToken';\n// import getSession from './authenticationReducers/getSession';\n// import deleteSession from './authenticationReducers/deleteSession';\n// import getGuestSession from './authenticationReducers/getGuestSession';\n// import toggleLogInStatus from './authenticationReducers/toggleLogInStatus';\n// import getUserDetails from './authenticationReducers/getUserDetails';\n\nimport setItemType from './setItemType';\nimport toggleNav from './toggleNav';\n// import searchData from './searchData';\n// import postSearchResults from './postSearchResults';\n\nimport postMoviesNowPlaying from './movieReducers/postMoviesNowPlaying';\nimport postMoviesPopular from './movieReducers/postMoviesPopular';\nimport postMoviesTopRated from './movieReducers/postMoviesTopRated';\nimport postMoviesUpcoming from './movieReducers/postMoviesUpcoming';\nimport getMovieDetails from './movieReducers/getMovieDetails';\nimport getMovieCredits from './movieReducers/getMovieCredits';\nimport getMovieTrailers from './movieReducers/getMovieTrailers';\nimport getMovieReviews from './movieReducers/getMovieReviews';\nimport getMovieFavorites from './movieReducers/getMovieFavourites';\nimport getMoviesRated from './movieReducers/getMoviesRated';\nimport rateMovie from './movieReducers/rateMovie';\n\nimport postTVAiringToday from './TVReducers/postTVAiringToday';\nimport postTVPopular from './TVReducers/postTVPopular';\nimport postTVOnTheAir from './TVReducers/postTVOnTheAir';\nimport postTVTopRated from './TVReducers/postTVTopRated';\nimport getTVDetails from './TVReducers/getTVDetails';\nimport getTVCredits from './TVReducers/getTVCredits';\nimport getTVTrailers from './TVReducers/getTVTrailers';\nimport getTVReviews from './TVReducers/getTVReviews';\nimport getTVFavorites from './TVReducers/getTVFavourites';\nimport getTVRated from './TVReducers/getTVRated';\n\nimport getPeopleDetails from './peopleReducers/getPeopleDetails';\nimport getPeopleCombinedCredits from './peopleReducers/getPeopleCombinedCredits';\nimport getPeoplePopular from './peopleReducers/getPeoplePopular.js';\n\nimport getDiscover from './getDiscover';\n\n// Combine Every single reducer for store.\nconst rootReducer = combineReducers({\n    PostMDBConfig: PostMDBConfigReducer,\n\n    // getRequestToken,\n    // getSession,\n    // deleteSession,\n    // getGuestSession,\n    // toggleLogInStatus,\n    // getUserDetails,\n\n    setItemType,\n    toggleNav,\n    // searchData,\n    // postSearchResults,\n\n    postMoviesNowPlaying,\n    postMoviesPopular,\n    postMoviesTopRated,\n    postMoviesUpcoming,\n    getMovieDetails,\n    getMovieCredits,\n    getMovieTrailers,\n    getMovieReviews,\n    getMovieFavorites,\n    getMoviesRated,\n    rateMovie,\n\n    postTVAiringToday,\n    postTVPopular,\n    postTVOnTheAir,\n    postTVTopRated,\n    getTVDetails,\n    getTVCredits,\n    getTVTrailers,\n    getTVReviews,\n    getTVFavorites,\n    getTVRated,\n\n    getPeopleDetails,\n    getPeopleCombinedCredits,\n    getPeoplePopular,\n\n    getDiscover,\n});\n\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from 'redux';\n// Replaced Wtih:\n// import { createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\n\n// npm install --save redux-thunk for redux-thunk to work\n\n// Somehow installs the redux store debugger with this idk how though LOL.\nconst middleware = [thunk];\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(...middleware)))\n\n// Replaced with:\n// const store = createStore(rootReducer)\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport store from './store';\n\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));"],"sourceRoot":""}
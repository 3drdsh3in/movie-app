{"version":3,"sources":["actions/setItemType.js","actions/types.js","actions/movieActions/postMoviesNowPlaying.js","actions/movieActions/postMoviesPopular.js","actions/movieActions/postMoviesTopRated.js","actions/movieActions/postMoviesUpcoming.js","actions/TVActions/postTVAiringToday.js","actions/TVActions/postTVPopular.js","actions/TVActions/postTVOnTheAir.js","actions/TVActions/postTVTopRated.js","components/HomeHeader/HomeHeader.js","components/ItemCarousel/ItemCarousel.js","components/MainFooter/MainFooter.js","components/Home/Home.js","actions/movieActions/getMovieDetails.js","components/SearchResults/SearchResults.js","actions/movieActions/getMovieCredits.js","actions/movieActions/getMovieTrailers.js","actions/movieActions/getMovieReviews.js","actions/TVActions/getTVDetails.js","actions/TVActions/getTVCredits.js","actions/TVActions/getTVTrailers.js","actions/TVActions/getTVReviews.js","components/ItemHeader/ItemHeader.js","components/PeopleCarousel/PeopleCarousel.js","components/ItemReviews/ItemReviews.js","components/ItemTrailers/ItemTrailers.js","components/ItemDetails/ItemDetails.js","actions/toggleNav.js","components/MainNav/MainNav.js","App.js","reducers/PostMDBConfigReducer.js","reducers/setItemType.js","reducers/toggleNav.js","reducers/movieReducers/postMoviesNowPlaying.js","reducers/movieReducers/postMoviesPopular.js","reducers/movieReducers/postMoviesTopRated.js","reducers/movieReducers/postMoviesUpcoming.js","reducers/movieReducers/getMovieDetails.js","reducers/movieReducers/getMovieCredits.js","reducers/movieReducers/getMovieTrailers.js","reducers/movieReducers/getMovieReviews.js","reducers/movieReducers/getMovieFavourites.js","reducers/movieReducers/getMoviesRated.js","reducers/movieReducers/rateMovie.js","reducers/TVReducers/postTVAiringToday.js","reducers/TVReducers/postTVPopular.js","reducers/TVReducers/postTVOnTheAir.js","reducers/TVReducers/postTVTopRated.js","reducers/TVReducers/getTVDetails.js","reducers/TVReducers/getTVCredits.js","reducers/TVReducers/getTVTrailers.js","reducers/TVReducers/getTVReviews.js","reducers/TVReducers/getTVFavourites.js","reducers/TVReducers/getTVRated.js","reducers/peopleReducers/getPeopleDetails.js","reducers/peopleReducers/getPeopleCombinedCredits.js","reducers/peopleReducers/getPeoplePopular.js","reducers/getDiscover.js","reducers/rootReducer.js","store.js","index.js"],"names":["setItemTypeMovie","type","postMoviesNowPlaying","url","console","log","dispatch","fetch","then","res","json","data","payload","catch","error","postMoviesPopular","postMoviesTopRated","postTVAiringToday","postTVPopular","postTVOnTheAir","postTVTopRated","HomeHeader","config","this","props","MDBConfig","sliderEl","document","querySelector","Swiper","slidesPerView","loop","spaceBetween","observer","autoplay","delay","pagination","el","navigation","nextEl","prevEl","className","items","map","item","i","key","id","to","itemType","toLowerCase","style","background","images","secure_base_url","backdrop_sizes","backdrop_path","backgroundSize","toUpperCase","title","name","vote_average","React","Component","ItemCarousel","data-wow-duration","movie","src","poster_sizes","poster_path","alt","original_name","xmlns","viewBox","d","MainFooter","Home","handleMovieFetch","postMoviesUpcoming","apiKey","handleTVFetch","querySelectorAll","init","slidesPerGroup","centeredSlides","breakpoints","1145","992","768","594","300","0","clickable","scrollbar","moviesUpcoming","results","moviesPopular","moviesNowPlaying","moviesTopRated","TVAiringToday","TVPopular","TVOnTheAir","TVTopRated","data-wow-delay","onClick","setItemType","connect","state","PostMDBConfig","getMovieDetails","getMovieCredits","getMovieTrailers","getMovieReviews","getTVDetails","getTVCredits","getTVTrailers","getTVReviews","ItemHeader","headerData","details","backgroundImage","status","original_language","genres","initHeader","PeopleCarousel","overview","600","900","1250","credits","cast","char","profile_path","ItemReviews","reviews","length","review","author","content","ItemTrailers","loopFillGroupWithBlank","1400","1800","2000","trailers","trailer","width","height","frameborder","gesture","allow","allowfullscreen","ItemDetails","item_id","match","params","getFilmData","nextProps","dispDetails","dispCredits","dispTrailers","dispReviews","movieDetails","movieCredits","movieTrailers","movieReviews","TVDetails","TVCredits","TVTrailers","TVReviews","toggleNav","navStatus","placeholder","path","exact","component","initialState","action","toggleMav","actions","getMoviesRated","getMovieFavorites","rateMovie","intialState","getTVFavourites","getTVRated","getPeopleDetails","getPeopleCombinedCredits","getPeoplePopular","getDiscover","rootReducer","combineReducers","PostMDBConfigReducer","getTVFavorites","middleware","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ac66675a.chunk.js","sourcesContent":["import { SET_ITEM_TYPE_MOVIE, SET_ITEM_TYPE_TV } from './types';\n\nconst setItemTypeMovie = type => ({\n    type: type === 'TV' ? SET_ITEM_TYPE_TV : SET_ITEM_TYPE_MOVIE\n})\n\nexport default setItemTypeMovie;","export const POST_MDB_CONFIG = 'POST_MDB_CONFIG'\n\nexport const GET_REQUEST_TOKEN = 'GET_REQUEST_TOKEN'\nexport const GET_SESSION = 'GET_SESSION'\nexport const DELETE_SESSION = 'DELETE_SESSION'\nexport const GET_GUEST_SESSION = 'GET_GUEST_SESSION'\nexport const TOGGLE_LOG_IN_STATUS = 'TOGGLE_LOG_IN_STATUS'\nexport const GET_USER_DETAILS = 'GET_USER_DETAILS'\n\nexport const POST_MOVIE_GENRES = 'POST_MOVIE_GENRES';\nexport const POST_TV_GENRES = 'POST_TV_GENRES';\n\nexport const SET_ITEM_TYPE_MOVIE = 'SET_ITEM_TYPE_MOVIE';\nexport const SET_ITEM_TYPE_TV = 'SET_ITEM_TYPE_TV';\n\nexport const POST_MOVIES_NOWPLAYING = 'POST_MOVIES_NOWPLAYING'\nexport const POST_MOVIES_POPULAR = 'POST_MOVIES_POPULAR'\nexport const POST_MOVIES_TOP_RATED = 'POST_MOVIES_TOP_RATED';\nexport const POST_MOVIES_UPCOMING = 'POST_MOVIES_UPCOMING';\nexport const GET_MOVIE_DETAILS = 'GET_MOVIE_DETAILS';\nexport const GET_MOVIE_CREDITS = 'GET_MOVIE_CREDITS';\nexport const GET_MOVIE_TRAILERS = 'GET_MOVIE_TRAILERS';\nexport const GET_MOVIE_REVIEWS = 'GET_MOVIE_REVIEWS';\nexport const GET_MOVIE_FAVOURITES = 'GET_MOVIE_FAVOURITES';\nexport const GET_MOVIES_RATED = 'GET_MOVIES_RATED';\nexport const RATE_MOVIE = 'RATE_MOVIE';\n\nexport const POST_TV_AIRING_TODAY = 'POST_TV_AIRING_TODAY';\nexport const POST_TV_POPULAR = 'POST_TV_POPULAR';\nexport const POST_TV_ON_THE_AIR = 'POST_TV_ON_THE_AIR';\nexport const POST_TV_TOP_RATED = 'POST_TV_TOP_RATED';\nexport const GET_TV_DETAILS = 'GET_TV_DETAILS';\nexport const GET_TV_CREDITS = 'GET_TV_CREDITS';\nexport const GET_TV_TRAILERS = 'GET_TV_TRAILERS';\nexport const GET_TV_REVIEWS = 'GET_TV_REVIEWS';\nexport const GET_TV_FAVOURITES = 'GET_TV_FAVOURITES';\nexport const GET_TV_RATED = 'GET_TV_RATED';\n\nexport const GET_PEOPLE_DETAILS = 'GET_PEOPLE_DETAILS';\nexport const GET_PEOPLE_COMBINED_CREDITS = 'GET_PEOPLE_COMBINED_CREDITS';\nexport const GET_PEOPLE_POPULAR = 'GET_PEOPLE_POPULAR';\n\nexport const GET_DISCOVER = 'GET_DISCOVER';\n\nexport const TOGGLE_NAV = 'TOGGLE_NAV';\nexport const SEARCH_DATA = 'SEARCH_DATA';\nexport const POST_SEARCH_RESULTS = 'POST_SEARCH_RESULTS';","import { POST_MOVIES_NOWPLAYING } from '../types';\n\nconst saveMoviesNowPlaying = payload => ({\n    type: POST_MOVIES_NOWPLAYING,\n    payload\n});\n\nconst postMoviesNowPlaying = url => {\n    console.log(url)\n    return dispatch => {\n        fetch(url)\n            .then(res => res.json())\n            .then(data => dispatch(saveMoviesNowPlaying(data)))\n            .catch(error => console.log(error));\n    };\n};\n\nexport default postMoviesNowPlaying;","import { POST_MOVIES_POPULAR } from '../types';\n\nconst saveMoviesPopular = payload => ({\n    type: POST_MOVIES_POPULAR,\n    payload\n});\n\nconst postMoviesPopular = url => {\n    return dispatch => {\n        fetch(url)\n            .then(res => res.json())\n            .then(data => dispatch(saveMoviesPopular(data)))\n            .catch(error => {\n                console.log(error);\n            })\n    }\n};\n\nexport default postMoviesPopular;","import { POST_MOVIES_TOP_RATED } from '../types';\n\nconst saveMoviesTopRated = payload => ({\n    type: POST_MOVIES_TOP_RATED,\n    payload\n});\n\nconst postMoviesTopRated = url => {\n    return dispatch => {\n        fetch(url)\n            .then(res => res.json())\n            .then(data => dispatch(saveMoviesTopRated(data)))\n            .catch(error => console.log(error))\n    }\n}\n\nexport default postMoviesTopRated;","import { POST_MOVIES_UPCOMING } from '../types';\n\nconst saveMoviesTopRated = payload => ({\n    type: POST_MOVIES_UPCOMING,\n    payload\n})\n\nconst postMoviesTopRated = url => {\n    return dispatch => {\n        fetch(url)\n            .then(res => res.json())\n            .then(data => dispatch(saveMoviesTopRated(data)))\n            .catch(error => console.log(error))\n    }\n}\n\nexport default postMoviesTopRated;","import { POST_TV_AIRING_TODAY } from '../types';\n\nconst saveTVAiringToday = payload => ({\n    type: POST_TV_AIRING_TODAY,\n    payload\n});\n\nconst postTVAiringToday = url => {\n    return dispatch => {\n        fetch(url)\n            .then(res => res.json())\n            .then(data => dispatch(saveTVAiringToday(data)))\n            .catch(error => console.log(error))\n    }\n};\n\nexport default postTVAiringToday;","import { POST_TV_POPULAR } from '../types';\n\nconst saveTVPopular = payload => ({\n    type: POST_TV_POPULAR,\n    payload\n});\n\nconst postTVPopular = url => {\n    return dispatch => {\n        fetch(url)\n            .then(res => res.json())\n            .then(data => dispatch(saveTVPopular(data)))\n            .catch(error => console.log(error))\n    }\n};\n\nexport default postTVPopular;","import { POST_TV_ON_THE_AIR } from '../types';\n\nconst saveTVOnTheAir = payload => ({\n    type: POST_TV_ON_THE_AIR,\n    payload\n});\n\nconst postTVOnTheAir = url => {\n    return dispatch => {\n        fetch(url)\n            .then(res => res.json())\n            .then(data => dispatch(saveTVOnTheAir(data)))\n            .catch(error => console.log(error))\n    }\n};\n\nexport default postTVOnTheAir;","import { POST_TV_TOP_RATED } from '../types';\n\nconst saveTVTopRated = payload => ({\n    type: POST_TV_TOP_RATED,\n    payload\n});\n\nconst postTVTopRated = url => {\n    return dispatch => {\n        fetch(url)\n            .then(res => res.json())\n            .then(data => dispatch(saveTVTopRated(data)))\n            .catch(error => console.log(error))\n    }\n}\n\nexport default postTVTopRated;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Swiper from 'swiper';\n\nimport './HomeHeader.scss';\n\nclass HomeHeader extends React.Component {\n\n    render() {\n        const config = this.props.MDBConfig;\n\n        // Initiates carousels\n        (() => {\n            const sliderEl = document.querySelector('.home-swiper-container');\n            if (!sliderEl) {\n                return;\n            }\n            const slider = new Swiper(sliderEl, {\n                slidesPerView: 1,\n                loop: true,\n                spaceBetween: 0,\n                observer: true,\n\n                autoplay: {\n                    delay: 10000,\n                },\n\n                pagination: {\n                    el: '.home-swiper-pagination',\n                    type: 'progressbar',\n                },\n                navigation: {\n                    nextEl: '.home-swiper-button-next',\n                    prevEl: '.home-swiper-button-prev',\n                }\n            });\n        })();\n\n        return (\n            <div className=\"home-swiper-container\">\n\n                {/* Loops through items and creates a carousel item */}\n                <div className=\"swiper-wrapper\">\n                    {this.props.items.map((item, i) => {\n                        if (i > 3 && i < 7) {\n                            return (\n                                <Link key={item.id} to={`/movie-app/details/${this.props.itemType.toLowerCase()}/${item.id}`} className=\"swiper-slide\" style={{\n                                    background: `linear-gradient(\n                rgba(0, 0, 0, 0.6),\n                rgba(0, 0, 0, 0.6)\n              ) center center no-repeat, #fff url(https://image.tmdb.org/t/p/w1280/${config.images ? config.images.secure_base_url : ''}${config.images ? config.images.backdrop_sizes[2] : ''}${item.backdrop_path}) center top no-repeat`, backgroundSize: 'cover, cover'\n                                }}>\n                                    <div>\n                                        <p className=\"swiper-slide__category\">{'Latest'.toUpperCase()}</p>\n                                        <h2 className=\"swiper-slide__title\">{this.props.itemType === 'MOVIE' ? item.title : item.name}</h2>\n                                        <p className=\"swiper-slide__item-duration\">{item.vote_average} Rating</p>\n                                    </div>\n                                </Link>\n                            );\n                        }\n                    })}\n                </div>\n\n                <div className=\"home-swiper-pagination\"></div>\n\n            </div>\n        );\n    }\n};\n\n\nexport default HomeHeader;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './ItemCarousel.scss';\n\nclass ItemCarousel extends Component {\n\n    render() {\n        const config = this.props.MDBConfig;\n\n        return (\n            <div className=\"carousel-container wow fadeIn\" data-wow-duration=\"3s\">\n\n                <div className=\"swiper-container\">\n                    <h2 className=\"swiper-container__title\">{this.props.title}</h2>\n\n                    {/* Loops through item data and creates a carousel item */}\n                    <div className=\"swiper-wrapper\">\n                        {this.props.items.map((movie, i) => (\n\n                            <div key={movie.id} className=\"swiper-slide\" >\n                                <Link to={`/movie-app/details/${this.props.type.toLowerCase()}/${movie.id}`} >\n                                    <img className=\"swiper-slide__image\" src={`https://image.tmdb.org/t/p/w154/${config.images ? config.images.secure_base_url : ''}${config.images ? config.images.poster_sizes[1] : ''}${movie.poster_path}`} alt={movie.title} />\n                                    <h3 className=\"swiper-slide__title\">{movie.title}</h3>\n                                    <h3 className=\"swiper-slide__title\">{movie.original_name}</h3>\n                                    <p className=\"swiper-slide-rating\">\n                                        <svg className=\"swiper-slide-rating__icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M256 372.686L380.83 448l-33.021-142.066L458 210.409l-145.267-12.475L256 64l-56.743 133.934L54 210.409l110.192 95.525L131.161 448z\" /></svg>\n                                        {movie.vote_average}\n                                    </p>\n                                </Link>\n                            </div>\n\n                        ))}\n                    </div>\n                    <div className=\"swiper-button-prev swiper-button-white\"></div>\n                    <div className=\"swiper-button-next swiper-button-white\"></div>\n                    {/* Add Pagination */}\n                    <div className=\"swiper-pagination\"></div>\n                </div>\n\n                <hr className=\"carousel-container__separator\" />\n            </div>\n        );\n    }\n}\n\nexport default ItemCarousel;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n// SCSS\nimport './MainFooter.scss';\n\nfunction MainFooter() {\n    return (\n        <footer className=\"main-footer\">\n            <section className=\"main-footer-left\">\n                <div className=\"main-footer-left-header\">\n                    <h1 className=\"main-footer-left-header-name\">Movie App</h1>\n                    <hr />\n                    <Link to=\"/movie-app/\">Home</Link>\n                    <Link to=\"/movie-app/user\">Profile</Link>\n                    <Link to=\"/movie-app/discover\">Discover</Link>\n                </div>\n                <div className=\"main-footer-left-contacts\">\n                    <div className=\"main-footer-left-contacts-item\">\n                        <h3 className=\"main-footer-portfolio-header\">Portfolio:</h3>\n                        <p><Link to=\"\">3drdsh3in/github.io</Link></p>\n                    </div>\n                    <div className=\"main-footer-left-contacts-item\">\n                        <h3 className=\"main-footer-phone-header\">Phone Number:</h3>\n                        <p>777-777-7777</p>\n                    </div>\n                </div>\n            </section>\n            <section className=\"main-footer-right\">\n\n                <div className=\"main-footer-right-icons\">\n                    <Link to=\"\"><i className=\"fab fa-twitter fa-2x\"></i></Link>\n                    <Link to=\"\"><i className=\"fab fa-facebook-f fa-2x\"></i></Link>\n                    <Link to=\"\"><i className=\"fas fa-book fa-2x\"></i></Link>\n                </div>\n\n                <img className=\"main-footer-mdb-logo\" src=\"https://www.themoviedb.org/assets/2/v4/logos/powered-by-rectangle-green-dcada16968ed648d5eb3b36bbcfdd8cdf804f723dcca775c8f2bf4cea025aad6.svg\" />\n\n                <div className=\"main-footer-right-copyright\">\n                    <p>Copyright &copy;2020 by Edward Shen</p>\n                </div>\n            </section>\n        </footer >\n    )\n}\n\nexport default MainFooter;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport setItemType from '../../actions/setItemType';\n\nimport postMoviesNowPlaying from '../../actions/movieActions/postMoviesNowPlaying';\nimport postMoviesPopular from '../../actions/movieActions/postMoviesPopular';\nimport postMoviesTopRated from '../../actions/movieActions/postMoviesTopRated';\nimport postMoviesUpcoming from '../../actions/movieActions/postMoviesUpcoming';\n\nimport postTVAiringToday from '../../actions/TVActions/postTVAiringToday';\nimport postTVPopular from '../../actions/TVActions/postTVPopular';\nimport postTVOnTheAir from '../../actions/TVActions/postTVOnTheAir';\nimport postTVTopRated from '../../actions/TVActions/postTVTopRated';\n\nimport Swiper from 'swiper';\nimport HomeHeader from '../HomeHeader/HomeHeader';\nimport ItemCarousel from '../ItemCarousel/ItemCarousel';\nimport MainFooter from '../MainFooter/MainFooter';\n\nimport './Home.scss';\n\nclass Home extends Component {\n\n    // Checks which type of data to fetch\n    componentDidMount() {\n        if (this.props.itemType === 'MOVIE') {\n            this.handleMovieFetch();\n        } else if (this.props.itemType === 'TV') {\n            this.handleTVFetch();\n        }\n    }\n\n    // fetches movie data\n    handleMovieFetch = () => {\n        this.props.postMoviesUpcoming(`https://api.themoviedb.org/3/movie/upcoming?api_key=${this.props.apiKey}&language=en-US&page=1`);\n        this.props.postMoviesPopular(`https://api.themoviedb.org/3/movie/popular?api_key=${this.props.apiKey}&language=en-US&page=1`);\n        this.props.postMoviesNowPlaying(`https://api.themoviedb.org/3/movie/now_playing?api_key=${this.props.apiKey}&language=en-US&page=1`);\n        this.props.postMoviesTopRated(`https://api.themoviedb.org/3/movie/top_rated?api_key=${this.props.apiKey}&language=en-US&page=1`);\n    }\n\n    // fetches tv data\n    handleTVFetch = () => {\n        this.props.postTVAiringToday(`https://api.themoviedb.org/3/tv/airing_today?api_key=${this.props.apiKey}&language=en-US&page=1`);\n        this.props.postTVPopular(`https://api.themoviedb.org/3/tv/popular?api_key=${this.props.apiKey}&language=en-US&page=1`);\n        this.props.postTVOnTheAir(`https://api.themoviedb.org/3/tv/on_the_air?api_key=${this.props.apiKey}&language=en-US&page=1`);\n        this.props.postTVTopRated(`https://api.themoviedb.org/3/tv/top_rated?api_key=${this.props.apiKey}&language=en-US&page=1`);\n    }\n\n    render() {\n        // Initiates carousels\n        (() => {\n            const sliderEl = document.querySelectorAll('.swiper-container');\n            if (!sliderEl) {\n                return;\n            }\n            const slider = new Swiper(sliderEl, {\n                init: true,\n                slidesPerView: 3,\n                slidesPerGroup: 3,\n                loop: false,\n                spaceBetween: 5,\n                observer: true,\n                centeredSlides: false,\n\n                breakpoints: {\n                    1145: {\n                        slidesPerView: 6,\n                        slidesPerGroup: 6\n                    },\n                    992: {\n                        slidesPerView: 5,\n                        slidesPerGroup: 5\n                    },\n                    768: {\n                        slidesPerView: 4,\n                        slidesPerGroup: 4\n                    },\n                    594: {\n                        slidesPerView: 3,\n                        slidesPerGroup: 3\n                    },\n                    300: {\n                        slidesPerView: 2,\n                        slidesPerGroup: 2\n                    },\n                    0: {\n                        slidesPerView: 1,\n                        slidesPerGroup: 1\n                    },\n                },\n                pagination: {\n                    el: '.swiper-pagination',\n                    clickable: true\n                },\n                scrollbar: {\n                    el: '.swiper-scrollbar',\n                    // hide: true\n                },\n                navigation: {\n                    nextEl: '.swiper-button-next',\n                    prevEl: '.swiper-button-prev',\n                }\n            });\n        })();\n\n        // Displays correct carousels\n        let movie;\n        if (this.props.itemType === 'MOVIE') {\n            movie =\n                <div>\n                    <ItemCarousel title=\"Upcoming\" MDBConfig={this.props.MDBConfig} items={this.props.moviesUpcoming.results} type={this.props.itemType} />\n                    <ItemCarousel title=\"Popular\" MDBConfig={this.props.MDBConfig} items={this.props.moviesPopular.results} type={this.props.itemType} />\n                    <ItemCarousel title=\"Now Playing\" MDBConfig={this.props.MDBConfig} items={this.props.moviesNowPlaying.results} type={this.props.itemType} />\n                    <ItemCarousel title=\"Top Rated\" MDBConfig={this.props.MDBConfig} items={this.props.moviesTopRated.results} type={this.props.itemType} />\n                </div>;\n        } else if (this.props.itemType === 'TV') {\n            movie =\n                <div>\n                    <ItemCarousel title=\"Airing Today\" MDBConfig={this.props.MDBConfig} items={this.props.TVAiringToday.results} type={this.props.itemType} />\n                    <ItemCarousel title=\"Popular\" MDBConfig={this.props.MDBConfig} items={this.props.TVPopular.results} type={this.props.itemType} />\n                    <ItemCarousel title=\"On The Air\" MDBConfig={this.props.MDBConfig} items={this.props.TVOnTheAir.results} type={this.props.itemType} />\n                    <ItemCarousel title=\"Top Rated\" MDBConfig={this.props.MDBConfig} items={this.props.TVTopRated.results} type={this.props.itemType} />\n                </div>;\n        }\n\n        return (\n            <div className=\"home-container\">\n\n                <HomeHeader itemType={this.props.itemType} MDBConfig={this.props.MDBConfig} items={this.props.itemType === 'TV' ? this.props.TVAiringToday.results : this.props.moviesNowPlaying.results} />\n\n                <div className=\"item-controller\">\n                    <button className=\"item-controller__switch wow fadeInDown\" data-wow-delay=\".5s\" data-wow-duration=\"1s\" onClick={() => { this.props.setItemType('MOVIES'); this.handleMovieFetch(); }}>Movies</button>\n                    <button className=\"item-controller__switch wow fadeInDown\" data-wow-delay=\".5s\" data-wow-duration=\"1s\" onClick={() => { this.props.setItemType('TV'); this.handleTVFetch(); }}>TV Shows</button>\n                </div>\n\n                <div className=\"home-container-main\">\n                    {movie}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    apiKey: state.PostMDBConfig.apiKey,\n    MDBConfig: state.PostMDBConfig,\n\n    itemType: state.setItemType.itemType,\n\n    moviesUpcoming: state.postMoviesUpcoming,\n    moviesPopular: state.postMoviesPopular,\n    moviesNowPlaying: state.postMoviesNowPlaying,\n    moviesTopRated: state.postMoviesTopRated,\n\n    TVAiringToday: state.postTVAiringToday,\n    TVPopular: state.postTVPopular,\n    TVOnTheAir: state.postTVOnTheAir,\n    TVTopRated: state.postTVTopRated,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setItemType: type => dispatch(setItemType(type)),\n\n    postMoviesUpcoming: url => dispatch(postMoviesUpcoming(url)),\n    postMoviesPopular: url => dispatch(postMoviesPopular(url)),\n    postMoviesNowPlaying: url => dispatch(postMoviesNowPlaying(url)),\n    postMoviesTopRated: url => dispatch(postMoviesTopRated(url)),\n\n    postTVAiringToday: url => dispatch(postTVAiringToday(url)),\n    postTVPopular: url => dispatch(postTVPopular(url)),\n    postTVOnTheAir: url => dispatch(postTVOnTheAir(url)),\n    postTVTopRated: url => dispatch(postTVTopRated(url)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import { GET_MOVIE_DETAILS } from '../types.js'\n\nconst saveMovieDetails = payload => ({\n    type: GET_MOVIE_DETAILS,\n    payload\n});\n\nconst getMovieDetails = url => {\n    return dispatch => {\n        console.log('a')\n        fetch(url)\n            .then(res => res.json())\n            .then(data => dispatch(saveMovieDetails(data)))\n            .catch(error => console.log(error))\n    }\n};\n\nexport default getMovieDetails;","import React from 'react';\n\n// import MainNav from '../MainNav/MainNav';\n\n\nclass SearchResults extends React.Component {\n    constructor() {\n        super()\n    }\n\n    render() {\n        return (\n            <>\n                {/* <MainNav /> */}\n            </>\n        )\n    }\n}\n\nexport default SearchResults;","import { GET_MOVIE_CREDITS } from '../types';\n\nconst saveMovieCredits = payload => ({\n    type: GET_MOVIE_CREDITS,\n    payload\n});\n\nconst getMovieCredits = url => {\n    console.log('b');\n    return dispatch => {\n        fetch(url)\n            .then(res => res.json())\n            .then(data => dispatch(saveMovieCredits(data)))\n            .catch(error => console.log(error))\n    };\n};\n\nexport default getMovieCredits;","\nimport { GET_MOVIE_TRAILERS } from '../types';\n\nconst saveMovieTrailers = payload => ({\n    type: GET_MOVIE_TRAILERS,\n    payload\n});\n\nconst getMovieTrailers = url => {\n    console.log('c')\n    return dispatch => {\n        fetch(url)\n            .then(res => res.json())\n            .then(data => dispatch(saveMovieTrailers(data)))\n            .catch(error => console.log(error))\n    };\n};\n\nexport default getMovieTrailers;","import { GET_MOVIE_REVIEWS } from '../types';\n\nconst saveMovieReviews = payload => ({\n    type: GET_MOVIE_REVIEWS,\n    payload\n});\n\nconst getMovieReviews = url => {\n    console.log('d')\n    return dispatch => {\n        fetch(url)\n            .then(res => res.json(res))\n            .then(data => dispatch(saveMovieReviews(data)))\n            .catch(error => console.log(error))\n    };\n};\n\nexport default getMovieReviews;","import { GET_TV_DETAILS } from '../types';\n\nconst saveTVDetails = payload => ({\n    type: GET_TV_DETAILS,\n    payload\n});\n\nconst getTVDetails = url => {\n    return dispatch => {\n        fetch(url)\n            .then(res => res.json())\n            .then(data => dispatch(saveTVDetails(data)))\n            .catch(error => console.log(error))\n    };\n};\n\nexport default getTVDetails;","import { GET_TV_CREDITS } from '../types';\n\nconst saveTVCredits = payload => ({\n    type: GET_TV_CREDITS,\n    payload\n});\n\nconst getTVCredits = url => {\n    return dispatch => {\n        fetch(url)\n            .then(res => res.json())\n            .then(data => dispatch(saveTVCredits(data)))\n            .catch(error => console.log(error))\n    };\n};\n\nexport default getTVCredits;","\nimport { GET_TV_TRAILERS } from '../types';\n\nconst saveTVTrailers = payload => ({\n    type: GET_TV_TRAILERS,\n    payload\n});\n\nconst getTVTrailers = url => {\n    return dispatch => {\n        fetch(url)\n            .then(res => res.json())\n            .then(data => dispatch(saveTVTrailers(data)))\n            .catch(error => console.log(error))\n    };\n};\n\nexport default getTVTrailers;","import { GET_TV_REVIEWS } from '../types';\n\nconst saveTVReviews = payload => ({\n    type: GET_TV_REVIEWS,\n    payload\n});\n\nconst getTVReviews = url => {\n    return dispatch => {\n        fetch(url)\n            .then(res => res.json())\n            .then(data => dispatch(saveTVReviews(data)))\n            .catch(error => console.log(error))\n    };\n};\n\nexport default getTVReviews;","import React from 'react';\n\nimport './ItemHeader.scss';\n\nclass ItemHeader extends React.Component {\n\n    initHeader() {\n        let headerData = this.props.details;\n        // Function need to parse the headerData into JSX.\n\n        if (!headerData === false) {\n            console.log(headerData)\n            return (\n                <>\n                    <header className=\"item-header\" style={{ backgroundImage: `url(http://image.tmdb.org/t/p/original/${headerData.backdrop_path})` }}>\n                        <div className=\"item-header-top\">\n                            <i className=\"fas fa-chevron-left fa-3x\"></i>\n                            <i className=\"fas fa-share fa-3x\"></i>\n                        </div>\n                        <div className=\"item-header-bottom\">\n                            <div className=\"item-header-bottom-information\">\n                                <img className=\"item-header-bottom-information-poster\" src={`http://image.tmdb.org/t/p/w92/${headerData.poster_path}`} />\n                                <div className=\"item-header-bottom-information-text\">\n                                    <h1>{headerData.title}</h1>\n                                    <div className=\"item-header-bottom-information-text-rating\">\n                                        <p>{headerData.vote_average}</p>\n                                        <i className=\"fas fa-star\"></i>\n                                        <i className=\"fas fa-star\"></i>\n                                        <i className=\"fas fa-star\"></i>\n                                        <i className=\"fas fa-star\"></i>\n                                        <i className=\"fas fa-star\"></i>\n                                    </div>\n                                    <div className=\"item-header-bottom-information-text-language\">\n                                        {headerData.status ? headerData.status : ''} | {headerData.original_language ? headerData.original_language : ''}\n                                    </div>\n                                    <div className=\"item-header-bottom-information-text-genres\">\n                                        {headerData.genres[0] ? headerData.genres[0].name : ''} | {headerData.genres[1] ? headerData.genres[1].name : ''}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"item-header-bottom-like\">\n                                <i className=\"far fa-heart fa-3x\"></i>\n                                <i className=\"fas fa-heart fa-3x hide\"></i>\n                            </div>\n                        </div>\n                    </header>\n                    <div className=\"headerOverlay\"></div>\n                </>\n            )\n        }\n        else {\n            return (\n                <p>Film Information not found</p>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <>\n                {this.initHeader()}\n            </>\n        )\n    }\n}\n\nexport default ItemHeader;","import React from 'react';\n\nimport './PeopleCarousel.scss';\nimport Swiper from 'swiper';\n\nclass PeopleCarousel extends React.Component {\n\n    render() {\n        console.log(this.props.details.overview)\n        var swiper = new Swiper('.s1', {\n            loop: false,\n            slidesPerView: 3,\n            spaceBetween: 0,\n            pagination: {\n                el: 'swiper-pagination',\n                clickable: true,\n            },\n            navigation: {\n                nextEl: '.swiper-button-next',\n                prevEl: '.swiper-button-prev',\n            },\n            breakpoints: {\n                300: {\n                    slidesPerView: 1,\n                },\n                600: {\n                    slidesPerView: 2,\n                },\n                768: {\n                    slidesPerView: 3,\n                },\n                900: {\n                    slidesPerView: 4,\n                },\n                1250: {\n                    slidesPerView: 5,\n                }\n            }\n        })\n        return (\n            <main className=\"item-body\">\n                <div className=\"item-body-content\">\n                    <div className=\"item-body-content-summary\">\n                        <h2>Summary:</h2>\n                        <p>{this.props.details.overview}</p>\n                    </div>\n                    <div className=\"swiper-container s1\" >\n                        <h2>Cast:</h2>\n                        <div className=\"swiper-wrapper\">\n                            {this.props.credits.cast.map(char => {\n                                return (\n                                    char.profile_path ?\n                                        <div className=\"swiper-slide\">\n                                            <div className=\"flip-card\">\n                                                <div className=\"flip-card-inner\">\n                                                    <img className=\"flip-card-front\" src={`https://image.tmdb.org/t/p/w154/${char.profile_path}`} />\n                                                    <div className=\"flip-card-back\">\n                                                        <button>Details</button>\n                                                        <button>Information</button>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <h4>{char.name}</h4>\n                                        </div>\n                                        :\n                                        null\n                                )\n                            })}\n                        </div>\n                        <div className=\"swiper-pagination\"></div>\n                        <div className=\"swiper-button-next swiper-button-white\"></div>\n                        <div className=\"swiper-button-prev swiper-button-white\"></div>\n                    </div>\n                </div>\n            </main>\n        )\n    }\n\n}\n\nexport default PeopleCarousel;","import React from 'react';\nimport './ItemReviews.scss';\n\nclass ItemReviews extends React.Component {\n\n    render() {\n        return (\n            <div className=\"ItemReviews\" >\n                <h2>Reviews:</h2>\n                <div className=\"ItemReviews-content\">\n                    {this.props.reviews.results.length > 0 ?\n                        this.props.reviews.results.map(review => (\n                            <div className=\"ItemReviews-content-review\">\n                                <h3 className=\"ItemReviews-content-review-header\">\n                                    {review.author}\n                                </h3>\n                                <p className=\"ItemReviews-content-review-paragraph\">\n                                    {review.content}\n                                </p>\n                            </div>\n                        ))\n                        :\n                        <p>No Reviews Found :( </p>\n                    }\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default ItemReviews;","import React from 'react';\nimport Swiper from 'swiper';\n\nimport './ItemTrailers.scss';\n\nclass ItemTrailers extends React.Component {\n\n    render() {\n        var swiper = new Swiper('.s2', {\n            slidesPerView: 3,\n            spaceBetween: 30,\n            slidesPerGroup: 3,\n            loopFillGroupWithBlank: true,\n            navigation: {\n                nextEl: '.swiper-button-next',\n                prevEl: '.swiper-button-prev',\n            },\n            breakpoints: {\n                300: {\n                    slidesPerView: 1,\n                },\n                600: {\n                    slidesPerView: 2,\n                },\n                900: {\n                    slidesPerView: 3,\n                },\n                1400: {\n                    slidesPerView: 4,\n                },\n                1800: {\n                    slidesPerView: 5,\n                },\n                2000: {\n                    slidesPerView: 6,\n                }\n            }\n        });\n        return (\n            <div className=\"ItemTrailers\">\n                <h2 className=\"ItemTrailers-headername\">Trailers: </h2>\n                <div className=\"swiper-container s2\">\n                    <div className=\"swiper-wrapper\">\n                        {this.props.trailers.results ?\n                            this.props.trailers.results.map(trailer => (\n                                <div className=\"swiper-slide\" style={{ width: '150px' }}>\n                                    <iframe width=\"100%\" height=\"250px\" frameborder=\"0\" gesture=\"media\" allow=\"encrypted-media\" allowfullscreen src={`https://www.youtube.com/embed/${trailer ? trailer.key : ''}`}>\n                                    </iframe>\n                                </div>\n                            ))\n                            :\n                            <p>No Trailers Found :( </p>\n                        }\n                    </div>\n                    <div className=\"swiper-button-next swiper-button-white\"></div>\n                    <div className=\"swiper-button-prev swiper-button-white\"></div>\n                </div>\n            </div>\n        )\n    }\n\n}\nexport default ItemTrailers;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport getMovieDetails from '../../actions/movieActions/getMovieDetails';\nimport getMovieCredits from '../../actions/movieActions/getMovieCredits';\nimport getMovieTrailers from '../../actions/movieActions/getMovieTrailers';\nimport getMovieReviews from '../../actions/movieActions/getMovieReviews';\n\nimport getTVDetails from '../../actions/TVActions/getTVDetails';\nimport getTVCredits from '../../actions/TVActions/getTVCredits';\nimport getTVTrailers from '../../actions/TVActions/getTVTrailers';\nimport getTVReviews from '../../actions/TVActions/getTVReviews';\n\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport PeopleCarousel from '../PeopleCarousel/PeopleCarousel';\nimport ItemReviews from '../ItemReviews/ItemReviews';\nimport ItemTrailers from '../ItemTrailers/ItemTrailers';\n\nimport './ItemDetails.scss';\n\n\nclass ItemDetails extends React.Component {\n\n    // Order of the lifecycle components here is completely different to alan's\n    // even though the code is almost identical.\n\n    componentDidMount() {\n        let item_id = this.props.match.params.id\n        this.getFilmData(item_id)\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        console.log('componentWillMount')\n        if (nextProps.match.params.id !== this.props.match.params.id) {\n            this.getFilmData(nextProps.match.params.id, nextProps.match.params.type);\n        }\n    }\n\n    // If Movie:\n    // Get:\n    // Name, Rating [Star Rating?], Genre\n    // Movie wallpaper thing, movie wallpaper #2 thing\n    // Movie Summary, Movie Trailers, Movie Reviews\n    // Movie Cast Portraits.\n    // else:\n    // Do the same shit but for TV shows.\n\n    // Display the corresponding shit to the screen via render() return.\n\n    // Add MainFooter At the end of all this.\n\n    getFilmData(id, itemType = this.props.match.params.type) {\n        let apiKey = this.props.MDBConfig.apiKey;\n        // this.props.match will be accessible as soon as any <Route path=\"\"> type tag is used in JSX parents.\n        switch (itemType) {\n            case \"movie\":\n                this.props.getMovieDetails(`https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}&language=en-US`)\n                this.props.getMovieCredits(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${apiKey}`)\n                this.props.getMovieTrailers(`https://api.themoviedb.org/3/movie/${id}/videos?api_key=${apiKey}&language=en-US`)\n                this.props.getMovieReviews(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${apiKey}&language=en-US&page=1`)\n                break\n            case \"tv\":\n                this.props.getTVDetails(`https://api.themoviedb.org/3/tv/${id}?api_key=${apiKey}&language=en-US`)\n                this.props.getTVCredits(`https://api.themoviedb.org/3/tv/${id}/credits?api_key=${apiKey}`)\n                this.props.getTVTrailers(`https://api.themoviedb.org/3/tv/${id}/videos?api_key=${apiKey}&language=en-US`)\n                this.props.getTVReviews(`https://api.themoviedb.org/3/tv/${id}/reviews?api_key=${apiKey}&language=en-US&page=1`)\n                break\n            default:\n                console.log('Get Movie/TV Info Failed')\n        }\n    }\n    render() {\n\n        let itemType = this.props.match.params.type;\n        let dispDetails, dispCredits, dispTrailers, dispReviews;\n        switch (itemType) {\n            case \"movie\":\n                dispDetails = this.props.movieDetails;\n                dispCredits = this.props.movieCredits;\n                dispTrailers = this.props.movieTrailers;\n                dispReviews = this.props.movieReviews;\n                break;\n            case \"tv\":\n                dispDetails = this.props.TVDetails;\n                dispCredits = this.props.TVCredits;\n                dispTrailers = this.props.TVTrailers;\n                dispReviews = this.props.TVReviews;\n                break;\n            default:\n                console.log('handeItemDisplay has fucking failed')\n        }\n\n        return (\n            <div className=\"item-main-content\">\n                <ItemHeader details={dispDetails.overview ? dispDetails : ''} />\n                <PeopleCarousel details={dispDetails ? dispDetails : ''} credits={dispCredits ? dispCredits : ''} />\n                <ItemTrailers trailers={dispTrailers ? dispTrailers : ''} />\n                <ItemReviews reviews={dispReviews ? dispReviews : ''} />\n            </div>\n        )\n    }\n}\n\n// Get the initial states specified by the corresponding reducers\nconst mapStateToProps = state => ({\n    // Need APIKEY in PostMDB Config to make calls:\n    apiKey: state.PostMDBConfig.apiKey,\n    MDBConfig: state.PostMDBConfig,\n\n    // Used to make decision on whether to get details of specific movie or tv show\n    itemType: state.setItemType,\n\n    movieDetails: state.getMovieDetails,\n    movieCredits: state.getMovieCredits,\n    movieTrailers: state.getMovieTrailers,\n    movieReviews: state.getMovieReviews,\n\n    TVDetails: state.getTVDetails,\n    TVCredits: state.getTVCredits,\n    TVTrailers: state.getTVTrailers,\n    TVReviews: state.getTVReviews,\n});\n\n// Use the imported actions objects to dispatch an action to the redux store.\nconst mapDispatchToProps = dispatch => ({\n\n    getMovieDetails: url => dispatch(getMovieDetails(url)),\n    getMovieCredits: url => dispatch(getMovieCredits(url)),\n    getMovieTrailers: url => dispatch(getMovieTrailers(url)),\n    getMovieReviews: url => dispatch(getMovieReviews(url)),\n\n    getTVDetails: url => dispatch(getTVDetails(url)),\n    getTVCredits: url => dispatch(getTVCredits(url)),\n    getTVTrailers: url => dispatch(getTVTrailers(url)),\n    getTVReviews: url => dispatch(getTVReviews(url)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemDetails);","import { TOGGLE_NAV } from './types';\n\nconst toggleNav = () => ({\n    type: TOGGLE_NAV\n});\n\nexport default toggleNav","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom'\n\n// SCSS Stylesheets\nimport './MainNav.scss';\nimport toggleNav from '../../actions/toggleNav';\n\nfunction MainNav(props) {\n\n    const handleHamburgerClickEvent = () => {\n        props.toggleNav();\n    }\n\n    return (\n        <nav className=\"nav-main\">\n            <div className={`nav-top-section ${props.navStatus ? '' : 'hide'}`}>\n                <Link to={'/movie-app/'}><img src=\"https://img.icons8.com/cotton/64/000000/3d-glasses.png\"></img></Link>\n                <div className=\"nav-searchbar\">\n                    <form className=\"nav-search-form\">\n                        <input placeholder=\"search...\" className=\"nav-search-form-input\" type=\"text\" name=\"\" id=\"\" />\n                        <button className=\"nav-search-form-button\" type=\"submit\"><i className=\"fas fa-search fa-2x\"></i></button>\n                    </form>\n                </div>\n            </div>\n\n            <button onClick={handleHamburgerClickEvent} className={`hamburger hamburger--spin js-hamburger ${props.navStatus ? 'is-active' : ''}`} type=\"button\">\n                <span className=\"hamburger-box\">\n                    <span className=\"hamburger-inner\"></span>\n                </span>\n            </button>\n\n            <div className={`nav-split-section ${props.navStatus ? '' : 'hide'}`}>\n                <Link to={'/movie-app/'}>\n                    <div className=\"nav-split-section-item\">\n                        <i className=\"fas fa-home fa-2x\"></i>\n                    </div>\n                </Link>\n                <Link to={'/user'}>\n                    <div className=\"nav-split-section-item\">\n                        <i className=\"fas fa-user-circle fa-2x\"></i>\n                    </div>\n                </Link>\n                <Link to={'/discover'}>\n                    <div className=\"nav-split-section-item\">\n                        <i className=\"far fa-compass fa-2x\"></i>\n                    </div>\n                </Link>\n            </div>\n        </nav>\n    )\n\n}\n// Give the component props some important state properties via the following container\nconst mapStateToProps = state => ({\n    apiKey: state.PostMDBConfig.apiKey,\n    navStatus: state.toggleNav.navStatus\n})\n// Give the component props the important toggleNav function via the following container.\nconst mapDispatchToProps = dispatch => ({\n    toggleNav: () => dispatch(toggleNav())\n})\n\n// \n// const tempVariable = connect(mapStateToProps, mapDispatchToProps);\n// console.log(tempVariable)\n// console.log(tempVariable(MainNav));\n// console.log(MainNav);\n// export default tempVariable(MainNav);\n\n// Get from the current redux store the state/dispatches & map them to props\n// ...before injecting them into the MainNav component {Thus completing it as a container component}.\nexport default connect(mapStateToProps, mapDispatchToProps)(MainNav);","import React from 'react';\n\nimport './App.css';\nimport Home from './components/Home/Home';\nimport SearchResults from './components/SearchResults/SearchResults';\nimport ItemDetails from './components/ItemDetails/ItemDetails';\nimport MainNav from './components/MainNav/MainNav';\nimport MainFooter from './components/MainFooter/MainFooter';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nfunction App() {\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <MainNav />\n        <Route path=\"/movie-app/\" exact component={Home} />\n        {/* Renders out a component based on a corresponding url */}\n        <Route path=\"/movie-app/details/:type/:id\" exact component={ItemDetails} />\n        <MainFooter />\n      </div>\n    </Router>\n  );\n}\n\nconst mapStateToProps = state => ({\n  apiKey: state.PostMDBConfig.apiKey\n});\n\nconst mapDispatchToProps = dispatch => ({\n\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","\nimport { POST_MDB_CONFIG } from '../actions/types';\n\nconst initialState = {\n    // Your key:\n    apiKey: 'fb8a39c9807f2120f494db319897180d',\n    // Alan's API key:\n    // apiKey: '12a5356516535d4d67654a936a088c1b'\n};\n\nconst PostMDBConfig = (state = initialState, action) => {\n    switch (action.type) {\n        case POST_MDB_CONFIG:\n            return {\n                // The Initial State /w the apiKey component:\n                ...state,\n                // The entire ... idk for now lol.\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n}\n\nexport default PostMDBConfig;","import { SET_ITEM_TYPE_MOVIE, SET_ITEM_TYPE_TV } from '../actions/types';\n\nconst initialState = {\n    itemType: 'MOVIE'\n};\n\nconst setItemType = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_ITEM_TYPE_MOVIE:\n            return {\n                itemType: 'MOVIE'\n            };\n        case SET_ITEM_TYPE_TV:\n            return {\n                itemType: 'TV'\n            };\n        default:\n            return state;\n    }\n};\n\nexport default setItemType;","\nimport { TOGGLE_NAV } from '../actions/types';\n\n// Initial State of the Navbar hamburger toggle is false.\nconst initialState = {\n    navStatus: false\n};\n\nconst toggleMav = (state = initialState, action) => {\n    // console.log('Nav Status Initialized')\n    switch (action.type) {\n        // In the case a TOGGLE_NAV action is called ...\n        case TOGGLE_NAV:\n            return {\n                ...state,\n                navStatus: state.navStatus ? false : true\n            }\n        default:\n            return state;\n    }\n}\n\nexport default toggleMav;","import { POST_MOVIES_NOWPLAYING } from '../../actions/types';\n\nconst initialState = {\n    results: []\n}\n\nconst postMoviesNowPlaying = (state = initialState, action) => {\n    switch (action.type) {\n        case POST_MOVIES_NOWPLAYING:\n            return ({\n                // ...state,\n                ...action.payload\n            })\n        default:\n            return state;\n    }\n}\n\nexport default postMoviesNowPlaying;","import { POST_MOVIES_POPULAR } from '../../actions/types';\n\nconst initialState = {\n    results: []\n}\n\nconst postMoviesPopular = (state = initialState, action) => {\n    switch (action.type) {\n        case POST_MOVIES_POPULAR:\n            return {\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nexport default postMoviesPopular;","import { POST_MOVIES_TOP_RATED } from '../../actions/types';\n\nconst initialState = {\n    results: []\n};\n\nconst postMoviesTopRated = (state = initialState, actions) => {\n    switch (actions.type) {\n        case POST_MOVIES_TOP_RATED:\n            return {\n                ...state,\n                ...actions.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default postMoviesTopRated;","import { POST_MOVIES_UPCOMING } from '../../actions/types';\n\nconst initialState = {\n    results: []\n};\n\nconst postMoviesUpcoming = (state = initialState, action) => {\n    switch (action.type) {\n        case POST_MOVIES_UPCOMING:\n            return {\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state\n    }\n};\n\nexport default postMoviesUpcoming;","import { GET_MOVIE_DETAILS } from '../../actions/types'\n\nconst initialState = {\n\n};\n\nconst getMovieDetails = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_MOVIE_DETAILS:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default getMovieDetails;","import { GET_MOVIE_CREDITS } from '../../actions/types';\n\nconst initialState = {\n    cast: []\n};\n\nconst getMovieCredits = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_MOVIE_CREDITS:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default getMovieCredits;","import { GET_MOVIE_TRAILERS } from '../../actions/types';\n\nconst initialState = {\n    results: []\n}\n\nconst getMoviesRated = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_MOVIE_TRAILERS:\n            return {\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nexport default getMoviesRated;","import { GET_MOVIE_REVIEWS } from '../../actions/types';\n\nconst initialState = {\n    results: []\n}\n\nconst getMovieReviews = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_MOVIE_REVIEWS:\n            return {\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nexport default getMovieReviews;","\nimport { GET_MOVIE_FAVOURITES } from '../../actions/types';\n\nconst initialState = {\n    results: []\n};\n\nconst getMovieFavorites = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_MOVIE_FAVOURITES:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default getMovieFavorites;","import { GET_MOVIES_RATED } from '../../actions/types';\n\nconst initialState = {\n    results: []\n};\n\nconst getMoviesRated = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_MOVIES_RATED:\n            return {\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nexport default getMoviesRated;","import { RATE_MOVIE } from '../../actions/types'\n\nconst initialState = {};\n\nconst rateMovie = (state = initialState, action) => {\n    switch (action.type) {\n        case RATE_MOVIE:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default rateMovie;","import { POST_TV_AIRING_TODAY } from '../../actions/types';\n\nconst intialState = {\n    results: []\n};\n\nconst postTVAiringToday = (state = intialState, action) => {\n    switch (action.type) {\n        case POST_TV_AIRING_TODAY:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default postTVAiringToday;","import { POST_TV_POPULAR } from '../../actions/types';\n\nconst initialState = {\n    results: []\n};\n\nconst postTVPopular = (state = initialState, action) => {\n    switch (action.type) {\n        case POST_TV_POPULAR:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default postTVPopular;","import { POST_TV_ON_THE_AIR } from '../../actions/types';\n\nconst initialState = {\n    results: []\n};\n\nconst postTVOnTheAir = (state = initialState, action) => {\n    switch (action.type) {\n        case POST_TV_ON_THE_AIR:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default postTVOnTheAir;","import { POST_TV_TOP_RATED } from '../../actions/types';\n\nconst initialState = {\n    results: []\n};\n\nconst postTVTopRated = (state = initialState, action) => {\n    switch (action.type) {\n        case POST_TV_TOP_RATED:\n            return {\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state;\n    }\n};\n\nexport default postTVTopRated;","import { GET_TV_DETAILS } from '../../actions/types';\n\nconst initialState = {\n\n};\n\nconst getTVDetails = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_TV_DETAILS:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default getTVDetails;","import { GET_TV_CREDITS } from '../../actions/types'\n\nconst initialState = {\n    cast: []\n};\n\nconst getTVCredits = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_TV_CREDITS:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default getTVCredits;","import { GET_TV_TRAILERS } from '../../actions/types';\n\nconst initialState = {\n    results: []\n};\n\nconst getTVTrailers = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_TV_TRAILERS:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default getTVTrailers;","import { GET_TV_REVIEWS } from '../../actions/types';\n\nconst initialState = {\n    results: []\n};\n\nconst getTVReviews = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_TV_REVIEWS:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default getTVReviews;","\nimport { GET_TV_FAVOURITES } from '../../actions/types';\n\nconst initialState = {\n    results: []\n};\n\nconst getTVFavourites = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_TV_FAVOURITES:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default getTVFavourites;","\nimport { GET_TV_RATED } from '../../actions/types';\n\nconst initialState = {\n    results: []\n};\n\nconst getTVRated = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_TV_RATED:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default getTVRated;\n","import { GET_PEOPLE_DETAILS } from '../../actions/types';\n\nconst initialState = {\n    results: []\n};\n\nconst getPeopleDetails = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_PEOPLE_DETAILS:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default getPeopleDetails;","import { GET_PEOPLE_COMBINED_CREDITS } from '../../actions/types';\n\nconst initialState = {\n    cast: []\n};\n\nconst getPeopleCombinedCredits = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_PEOPLE_COMBINED_CREDITS:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default getPeopleCombinedCredits;","\nimport { GET_PEOPLE_POPULAR } from '../../actions/types';\n\nconst initialState = {\n    results: []\n};\n\nconst getPeoplePopular = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_PEOPLE_POPULAR:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default getPeoplePopular;","import { GET_DISCOVER } from '../actions/types';\n\nconst initialState = {\n    results: []\n};\n\nconst getDiscover = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_DISCOVER:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n}\n\nexport default getDiscover;","\nimport { combineReducers } from 'redux';\nimport PostMDBConfigReducer from './PostMDBConfigReducer';\n\n// import getRequestToken from './authenticationReducers/getRequestToken';\n// import getSession from './authenticationReducers/getSession';\n// import deleteSession from './authenticationReducers/deleteSession';\n// import getGuestSession from './authenticationReducers/getGuestSession';\n// import toggleLogInStatus from './authenticationReducers/toggleLogInStatus';\n// import getUserDetails from './authenticationReducers/getUserDetails';\n\nimport setItemType from './setItemType';\nimport toggleNav from './toggleNav';\n// import searchData from './searchData';\n// import postSearchResults from './postSearchResults';\n\nimport postMoviesNowPlaying from './movieReducers/postMoviesNowPlaying';\nimport postMoviesPopular from './movieReducers/postMoviesPopular';\nimport postMoviesTopRated from './movieReducers/postMoviesTopRated';\nimport postMoviesUpcoming from './movieReducers/postMoviesUpcoming';\nimport getMovieDetails from './movieReducers/getMovieDetails';\nimport getMovieCredits from './movieReducers/getMovieCredits';\nimport getMovieTrailers from './movieReducers/getMovieTrailers';\nimport getMovieReviews from './movieReducers/getMovieReviews';\nimport getMovieFavorites from './movieReducers/getMovieFavourites';\nimport getMoviesRated from './movieReducers/getMoviesRated';\nimport rateMovie from './movieReducers/rateMovie';\n\nimport postTVAiringToday from './TVReducers/postTVAiringToday';\nimport postTVPopular from './TVReducers/postTVPopular';\nimport postTVOnTheAir from './TVReducers/postTVOnTheAir';\nimport postTVTopRated from './TVReducers/postTVTopRated';\nimport getTVDetails from './TVReducers/getTVDetails';\nimport getTVCredits from './TVReducers/getTVCredits';\nimport getTVTrailers from './TVReducers/getTVTrailers';\nimport getTVReviews from './TVReducers/getTVReviews';\nimport getTVFavorites from './TVReducers/getTVFavourites';\nimport getTVRated from './TVReducers/getTVRated';\n\nimport getPeopleDetails from './peopleReducers/getPeopleDetails';\nimport getPeopleCombinedCredits from './peopleReducers/getPeopleCombinedCredits';\nimport getPeoplePopular from './peopleReducers/getPeoplePopular.js';\n\nimport getDiscover from './getDiscover';\n\n// Combine Every single reducer for store.\nconst rootReducer = combineReducers({\n    PostMDBConfig: PostMDBConfigReducer,\n\n    // getRequestToken,\n    // getSession,\n    // deleteSession,\n    // getGuestSession,\n    // toggleLogInStatus,\n    // getUserDetails,\n\n    setItemType,\n    toggleNav,\n    // searchData,\n    // postSearchResults,\n\n    postMoviesNowPlaying,\n    postMoviesPopular,\n    postMoviesTopRated,\n    postMoviesUpcoming,\n    getMovieDetails,\n    getMovieCredits,\n    getMovieTrailers,\n    getMovieReviews,\n    getMovieFavorites,\n    getMoviesRated,\n    rateMovie,\n\n    postTVAiringToday,\n    postTVPopular,\n    postTVOnTheAir,\n    postTVTopRated,\n    getTVDetails,\n    getTVCredits,\n    getTVTrailers,\n    getTVReviews,\n    getTVFavorites,\n    getTVRated,\n\n    getPeopleDetails,\n    getPeopleCombinedCredits,\n    getPeoplePopular,\n\n    getDiscover,\n});\n\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from 'redux';\n// Replaced Wtih:\n// import { createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\n\n// npm install --save redux-thunk for redux-thunk to work\n\n// Somehow installs the redux store debugger with this idk how though LOL.\n\n\nconst middleware = [thunk];\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(...middleware)))\n\n// Replaced with:\n// const store = createStore(rootReducer)\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport store from './store';\n\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));"],"sourceRoot":""}
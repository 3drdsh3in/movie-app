{"version":3,"sources":["components/Profile/images/popcorn.png","components/MainNav/images/popcorn.png","actions/setItemType.js","actions/types.js","actions/movieActions/postMoviesNowPlaying.js","actions/movieActions/postMoviesPopular.js","actions/movieActions/postMoviesTopRated.js","actions/movieActions/postMoviesUpcoming.js","actions/TVActions/postTVAiringToday.js","actions/TVActions/postTVPopular.js","actions/TVActions/postTVOnTheAir.js","actions/TVActions/postTVTopRated.js","components/HomeHeader/HomeHeader.js","components/ItemCarousel/ItemCarousel.js","components/Home/Home.js","components/Profile/Profile.js","actions/movieActions/postMovieGenres.js","components/Discover/Discover.js","actions/getDiscover.js","actions/searchData.js","components/SearchResults/SearchResults.js","actions/movieActions/getMovieDetails.js","actions/movieActions/getMovieCredits.js","actions/movieActions/getMovieTrailers.js","actions/movieActions/getMovieReviews.js","actions/TVActions/getTVDetails.js","actions/TVActions/getTVCredits.js","actions/TVActions/getTVTrailers.js","actions/TVActions/getTVReviews.js","components/ItemHeader/ItemHeader.js","components/PeopleCarousel/PeopleCarousel.js","components/ItemReviews/ItemReviews.js","components/ItemTrailers/ItemTrailers.js","components/ItemDetails/ItemDetails.js","actions/toggleNav.js","components/MainNav/MainNav.js","components/MainFooter/MainFooter.js","App.js","reducers/PostMDBConfigReducer.js","reducers/movieReducers/postMovieGenres.js","reducers/setItemType.js","reducers/toggleNav.js","reducers/searchData.js","reducers/movieReducers/postMoviesNowPlaying.js","reducers/movieReducers/postMoviesPopular.js","reducers/movieReducers/postMoviesTopRated.js","reducers/movieReducers/postMoviesUpcoming.js","reducers/movieReducers/getMovieDetails.js","reducers/movieReducers/getMovieCredits.js","reducers/movieReducers/getMovieTrailers.js","reducers/movieReducers/getMovieReviews.js","reducers/movieReducers/getMovieFavourites.js","reducers/movieReducers/getMoviesRated.js","reducers/movieReducers/rateMovie.js","reducers/TVReducers/postTVAiringToday.js","reducers/TVReducers/postTVPopular.js","reducers/TVReducers/postTVOnTheAir.js","reducers/TVReducers/postTVTopRated.js","reducers/TVReducers/getTVDetails.js","reducers/TVReducers/getTVCredits.js","reducers/TVReducers/getTVTrailers.js","reducers/TVReducers/getTVReviews.js","reducers/TVReducers/getTVFavourites.js","reducers/TVReducers/getTVRated.js","reducers/peopleReducers/getPeopleDetails.js","reducers/peopleReducers/getPeopleCombinedCredits.js","reducers/peopleReducers/getPeoplePopular.js","reducers/getDiscover.js","reducers/rootReducer.js","store.js","index.js"],"names":["module","exports","setItemTypeMovie","type","postMoviesNowPlaying","url","console","log","dispatch","fetch","then","res","json","data","payload","catch","error","postMoviesPopular","postMoviesTopRated","postTVAiringToday","postTVPopular","postTVOnTheAir","postTVTopRated","HomeHeader","config","this","props","MDBConfig","sliderEl","document","querySelector","Swiper","slidesPerView","loop","spaceBetween","observer","autoplay","delay","pagination","el","navigation","nextEl","prevEl","className","items","map","item","i","key","id","to","itemType","toLowerCase","style","background","images","secure_base_url","backdrop_sizes","backdrop_path","backgroundSize","toUpperCase","title","name","vote_average","React","Component","ItemCarousel","data-wow-duration","movie","src","poster_sizes","poster_path","alt","original_name","xmlns","viewBox","d","Home","handleMovieFetch","postMoviesUpcoming","apiKey","handleTVFetch","querySelectorAll","init","slidesPerGroup","centeredSlides","breakpoints","1145","992","768","594","300","0","clickable","scrollbar","moviesUpcoming","results","moviesPopular","moviesNowPlaying","moviesTopRated","TVAiringToday","TVPopular","TVOnTheAir","TVTopRated","onClick","setItemType","connect","state","PostMDBConfig","Profile","logo","postMovieGenres","getDiscover","discoverData","genreData","err","getGenres","genres","useState","loadState","setLoadState","sortField","setSortField","includeAdult","pageNum","setPageNum","yearState","setYearState","voteAverage","setVoteAverage","genreState","setGenreState","useEffect","defaultQuery","toggleLoadState","page","onSubmit","e","preventDefault","filterQuery","onChange","target","value","placeHolder","min","max","result","length","searchData","searchResults","match","params","query","searchState","setSearchState","pageState","setPageState","getMovieDetails","getMovieCredits","getMovieTrailers","getMovieReviews","getTVDetails","getTVCredits","getTVTrailers","getTVReviews","ItemHeader","headerData","details","refs","backgroundImage","history","goBack","status","original_language","initHeader","PeopleCarousel","overview","600","900","1250","credits","cast","char","profile_path","ItemReviews","reviews","review","author","content","slice","href","class","ItemTrailers","loopFillGroupWithBlank","1400","1800","2000","trailers","trailer","width","height","frameborder","gesture","allow","allowfullscreen","ItemDetails","item_id","getFilmData","nextProps","dispDetails","dispCredits","dispTrailers","dispReviews","movieDetails","movieCredits","movieTrailers","movieReviews","TVDetails","TVCredits","TVTrailers","TVReviews","toggleNav","navStatus","inputState","setInputState","placeholder","getElementById","MainFooter","path","component","MainNav","exact","SearchResults","Discover","initialState","action","toggleMav","actions","getMoviesRated","getMovieFavorites","rateMovie","intialState","getTVFavourites","getTVRated","getPeopleDetails","getPeopleCombinedCredits","getPeoplePopular","rootReducer","combineReducers","PostMDBConfigReducer","getTVFavorites","middleware","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","ReactDOM","render"],"mappings":"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","file":"static/js/main.a5b873ed.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/popcorn.0588de3c.png\";","module.exports = __webpack_public_path__ + \"static/media/popcorn.0588de3c.png\";","import { SET_ITEM_TYPE_MOVIE, SET_ITEM_TYPE_TV } from './types';\n\nconst setItemTypeMovie = type => ({\n    type: type === 'TV' ? SET_ITEM_TYPE_TV : SET_ITEM_TYPE_MOVIE\n})\n\nexport default setItemTypeMovie;","export const POST_MDB_CONFIG = 'POST_MDB_CONFIG'\n\nexport const GET_REQUEST_TOKEN = 'GET_REQUEST_TOKEN'\nexport const GET_SESSION = 'GET_SESSION'\nexport const DELETE_SESSION = 'DELETE_SESSION'\nexport const GET_GUEST_SESSION = 'GET_GUEST_SESSION'\nexport const TOGGLE_LOG_IN_STATUS = 'TOGGLE_LOG_IN_STATUS'\nexport const GET_USER_DETAILS = 'GET_USER_DETAILS'\n\nexport const POST_MOVIE_GENRES = 'POST_MOVIE_GENRES';\nexport const POST_TV_GENRES = 'POST_TV_GENRES';\n\nexport const SET_ITEM_TYPE_MOVIE = 'SET_ITEM_TYPE_MOVIE';\nexport const SET_ITEM_TYPE_TV = 'SET_ITEM_TYPE_TV';\n\nexport const POST_MOVIES_NOWPLAYING = 'POST_MOVIES_NOWPLAYING'\nexport const POST_MOVIES_POPULAR = 'POST_MOVIES_POPULAR'\nexport const POST_MOVIES_TOP_RATED = 'POST_MOVIES_TOP_RATED';\nexport const POST_MOVIES_UPCOMING = 'POST_MOVIES_UPCOMING';\nexport const GET_MOVIE_DETAILS = 'GET_MOVIE_DETAILS';\nexport const GET_MOVIE_CREDITS = 'GET_MOVIE_CREDITS';\nexport const GET_MOVIE_TRAILERS = 'GET_MOVIE_TRAILERS';\nexport const GET_MOVIE_REVIEWS = 'GET_MOVIE_REVIEWS';\nexport const GET_MOVIE_FAVOURITES = 'GET_MOVIE_FAVOURITES';\nexport const GET_MOVIES_RATED = 'GET_MOVIES_RATED';\nexport const RATE_MOVIE = 'RATE_MOVIE';\n\nexport const POST_TV_AIRING_TODAY = 'POST_TV_AIRING_TODAY';\nexport const POST_TV_POPULAR = 'POST_TV_POPULAR';\nexport const POST_TV_ON_THE_AIR = 'POST_TV_ON_THE_AIR';\nexport const POST_TV_TOP_RATED = 'POST_TV_TOP_RATED';\nexport const GET_TV_DETAILS = 'GET_TV_DETAILS';\nexport const GET_TV_CREDITS = 'GET_TV_CREDITS';\nexport const GET_TV_TRAILERS = 'GET_TV_TRAILERS';\nexport const GET_TV_REVIEWS = 'GET_TV_REVIEWS';\nexport const GET_TV_FAVOURITES = 'GET_TV_FAVOURITES';\nexport const GET_TV_RATED = 'GET_TV_RATED';\n\nexport const GET_PEOPLE_DETAILS = 'GET_PEOPLE_DETAILS';\nexport const GET_PEOPLE_COMBINED_CREDITS = 'GET_PEOPLE_COMBINED_CREDITS';\nexport const GET_PEOPLE_POPULAR = 'GET_PEOPLE_POPULAR';\n\nexport const GET_DISCOVER = 'GET_DISCOVER';\n\nexport const TOGGLE_NAV = 'TOGGLE_NAV';\nexport const SEARCH_DATA = 'SEARCH_DATA';\nexport const POST_SEARCH_RESULTS = 'POST_SEARCH_RESULTS';","import { POST_MOVIES_NOWPLAYING } from '../types';\n\nconst saveMoviesNowPlaying = payload => ({\n    type: POST_MOVIES_NOWPLAYING,\n    payload\n});\n\nconst postMoviesNowPlaying = url => {\n    console.log(url)\n    return dispatch => {\n        fetch(url)\n            .then(res => res.json())\n            .then(data => dispatch(saveMoviesNowPlaying(data)))\n            .catch(error => console.log(error));\n    };\n};\n\nexport default postMoviesNowPlaying;","import { POST_MOVIES_POPULAR } from '../types';\n\nconst saveMoviesPopular = payload => ({\n    type: POST_MOVIES_POPULAR,\n    payload\n});\n\nconst postMoviesPopular = url => {\n    return dispatch => {\n        fetch(url)\n            .then(res => res.json())\n            .then(data => dispatch(saveMoviesPopular(data)))\n            .catch(error => {\n                console.log(error);\n            })\n    }\n};\n\nexport default postMoviesPopular;","import { POST_MOVIES_TOP_RATED } from '../types';\n\nconst saveMoviesTopRated = payload => ({\n    type: POST_MOVIES_TOP_RATED,\n    payload\n});\n\nconst postMoviesTopRated = url => {\n    return dispatch => {\n        fetch(url)\n            .then(res => res.json())\n            .then(data => dispatch(saveMoviesTopRated(data)))\n            .catch(error => console.log(error))\n    }\n}\n\nexport default postMoviesTopRated;","import { POST_MOVIES_UPCOMING } from '../types';\n\nconst saveMoviesTopRated = payload => ({\n    type: POST_MOVIES_UPCOMING,\n    payload\n})\n\nconst postMoviesTopRated = url => {\n    return dispatch => {\n        fetch(url)\n            .then(res => res.json())\n            .then(data => dispatch(saveMoviesTopRated(data)))\n            .catch(error => console.log(error))\n    }\n}\n\nexport default postMoviesTopRated;","import { POST_TV_AIRING_TODAY } from '../types';\n\nconst saveTVAiringToday = payload => ({\n    type: POST_TV_AIRING_TODAY,\n    payload\n});\n\nconst postTVAiringToday = url => {\n    return dispatch => {\n        fetch(url)\n            .then(res => res.json())\n            .then(data => dispatch(saveTVAiringToday(data)))\n            .catch(error => console.log(error))\n    }\n};\n\nexport default postTVAiringToday;","import { POST_TV_POPULAR } from '../types';\n\nconst saveTVPopular = payload => ({\n    type: POST_TV_POPULAR,\n    payload\n});\n\nconst postTVPopular = url => {\n    return dispatch => {\n        fetch(url)\n            .then(res => res.json())\n            .then(data => dispatch(saveTVPopular(data)))\n            .catch(error => console.log(error))\n    }\n};\n\nexport default postTVPopular;","import { POST_TV_ON_THE_AIR } from '../types';\n\nconst saveTVOnTheAir = payload => ({\n    type: POST_TV_ON_THE_AIR,\n    payload\n});\n\nconst postTVOnTheAir = url => {\n    return dispatch => {\n        fetch(url)\n            .then(res => res.json())\n            .then(data => dispatch(saveTVOnTheAir(data)))\n            .catch(error => console.log(error))\n    }\n};\n\nexport default postTVOnTheAir;","import { POST_TV_TOP_RATED } from '../types';\n\nconst saveTVTopRated = payload => ({\n    type: POST_TV_TOP_RATED,\n    payload\n});\n\nconst postTVTopRated = url => {\n    return dispatch => {\n        fetch(url)\n            .then(res => res.json())\n            .then(data => dispatch(saveTVTopRated(data)))\n            .catch(error => console.log(error))\n    }\n}\n\nexport default postTVTopRated;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Swiper from 'swiper';\n\nimport './HomeHeader.scss';\n\nclass HomeHeader extends React.Component {\n\n    render() {\n        const config = this.props.MDBConfig;\n\n        // Initiates carousels\n        (() => {\n            const sliderEl = document.querySelector('.home-swiper-container');\n            if (!sliderEl) {\n                return;\n            }\n            const slider = new Swiper(sliderEl, {\n                slidesPerView: 1,\n                loop: true,\n                spaceBetween: 0,\n                observer: true,\n\n                autoplay: {\n                    delay: 10000,\n                },\n\n                pagination: {\n                    el: '.home-swiper-pagination',\n                    type: 'progressbar',\n                },\n                navigation: {\n                    nextEl: '.home-swiper-button-next',\n                    prevEl: '.home-swiper-button-prev',\n                }\n            });\n        })();\n\n        return (\n            <div className=\"home-swiper-container\">\n\n                {/* Loops through items and creates a carousel item */}\n                <div className=\"swiper-wrapper\">\n                    {this.props.items.map((item, i) => {\n                        if (i > 3 && i < 7) {\n                            return (\n                                <Link key={item.id} to={`/movie-app/details/${this.props.itemType.toLowerCase()}/${item.id}`} className=\"swiper-slide\" style={{\n                                    background: `linear-gradient(\n                rgba(0, 0, 0, 0.6),\n                rgba(0, 0, 0, 0.6)\n              ) center center no-repeat, #fff url(https://image.tmdb.org/t/p/w1280/${config.images ? config.images.secure_base_url : ''}${config.images ? config.images.backdrop_sizes[2] : ''}${item.backdrop_path}) center top no-repeat`, backgroundSize: 'cover, cover'\n                                }}>\n                                    <div>\n                                        <p className=\"swiper-slide__category\">{'Latest'.toUpperCase()}</p>\n                                        <h2 className=\"swiper-slide__title\">{this.props.itemType === 'MOVIE' ? item.title : item.name}</h2>\n                                        <p className=\"swiper-slide__item-duration\">{item.vote_average} Rating</p>\n                                    </div>\n                                </Link>\n                            );\n                        }\n                    })}\n                </div>\n\n                <div className=\"home-swiper-pagination\"></div>\n\n            </div>\n        );\n    }\n};\n\n\nexport default HomeHeader;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './ItemCarousel.scss';\n\nclass ItemCarousel extends Component {\n\n    render() {\n        const config = this.props.MDBConfig;\n\n        return (\n            <div className=\"carousel-container\" data-wow-duration=\"3s\">\n\n                <div className=\"swiper-container\">\n                    <h2 className=\"swiper-container__title\">{this.props.title}</h2>\n\n                    {/* Loops through item data and creates a carousel item */}\n                    <div className=\"swiper-wrapper\">\n                        {this.props.items.map((movie, i) => (\n\n                            <div key={movie.id} className=\"swiper-slide\" >\n                                <Link to={`/movie-app/details/${this.props.type.toLowerCase()}/${movie.id}`} >\n                                    <img className=\"swiper-slide__image\" src={`https://image.tmdb.org/t/p/w342/${config.images ? config.images.secure_base_url : ''}${config.images ? config.images.poster_sizes[1] : ''}${movie.poster_path}`} alt={movie.title} />\n                                    <h3 className=\"swiper-slide__title\">{movie.title}</h3>\n                                    <h3 className=\"swiper-slide__title\">{movie.original_name}</h3>\n                                    <p className=\"swiper-slide-rating\">\n                                        <svg className=\"swiper-slide-rating__icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M256 372.686L380.83 448l-33.021-142.066L458 210.409l-145.267-12.475L256 64l-56.743 133.934L54 210.409l110.192 95.525L131.161 448z\" /></svg>\n                                        {movie.vote_average}\n                                    </p>\n                                </Link>\n                            </div>\n\n                        ))}\n                    </div>\n                    <div className=\"swiper-button-prev swiper-button-white\"></div>\n                    <div className=\"swiper-button-next swiper-button-white\"></div>\n                    {/* Add Pagination */}\n                    <div className=\"swiper-pagination\"></div>\n                </div>\n\n                <hr className=\"carousel-container__separator\" />\n            </div>\n        );\n    }\n}\n\nexport default ItemCarousel;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport setItemType from '../../actions/setItemType';\n\nimport postMoviesNowPlaying from '../../actions/movieActions/postMoviesNowPlaying';\nimport postMoviesPopular from '../../actions/movieActions/postMoviesPopular';\nimport postMoviesTopRated from '../../actions/movieActions/postMoviesTopRated';\nimport postMoviesUpcoming from '../../actions/movieActions/postMoviesUpcoming';\n\nimport postTVAiringToday from '../../actions/TVActions/postTVAiringToday';\nimport postTVPopular from '../../actions/TVActions/postTVPopular';\nimport postTVOnTheAir from '../../actions/TVActions/postTVOnTheAir';\nimport postTVTopRated from '../../actions/TVActions/postTVTopRated';\n\nimport Swiper from 'swiper';\nimport HomeHeader from '../HomeHeader/HomeHeader';\nimport ItemCarousel from '../ItemCarousel/ItemCarousel';\n\nimport './Home.scss';\n\nclass Home extends Component {\n\n    // Checks which type of data to fetch\n    componentDidMount() {\n        if (this.props.itemType === 'MOVIE') {\n            this.handleMovieFetch();\n        } else if (this.props.itemType === 'TV') {\n            this.handleTVFetch();\n        }\n    }\n\n    // fetches movie data\n    handleMovieFetch = () => {\n        this.props.postMoviesUpcoming(`https://api.themoviedb.org/3/movie/upcoming?api_key=${this.props.apiKey}&language=en-US&page=1`);\n        this.props.postMoviesPopular(`https://api.themoviedb.org/3/movie/popular?api_key=${this.props.apiKey}&language=en-US&page=1`);\n        this.props.postMoviesNowPlaying(`https://api.themoviedb.org/3/movie/now_playing?api_key=${this.props.apiKey}&language=en-US&page=1`);\n        this.props.postMoviesTopRated(`https://api.themoviedb.org/3/movie/top_rated?api_key=${this.props.apiKey}&language=en-US&page=1`);\n    }\n\n    // fetches tv data\n    handleTVFetch = () => {\n        this.props.postTVAiringToday(`https://api.themoviedb.org/3/tv/airing_today?api_key=${this.props.apiKey}&language=en-US&page=1`);\n        this.props.postTVPopular(`https://api.themoviedb.org/3/tv/popular?api_key=${this.props.apiKey}&language=en-US&page=1`);\n        this.props.postTVOnTheAir(`https://api.themoviedb.org/3/tv/on_the_air?api_key=${this.props.apiKey}&language=en-US&page=1`);\n        this.props.postTVTopRated(`https://api.themoviedb.org/3/tv/top_rated?api_key=${this.props.apiKey}&language=en-US&page=1`);\n    }\n\n    render() {\n        // Initiates carousels\n        (() => {\n            const sliderEl = document.querySelectorAll('.swiper-container');\n            if (!sliderEl) {\n                return;\n            }\n            const slider = new Swiper(sliderEl, {\n                init: true,\n                slidesPerView: 3,\n                slidesPerGroup: 3,\n                loop: false,\n                spaceBetween: 5,\n                observer: true,\n                centeredSlides: false,\n\n                breakpoints: {\n                    1145: {\n                        slidesPerView: 6,\n                        slidesPerGroup: 6\n                    },\n                    992: {\n                        slidesPerView: 5,\n                        slidesPerGroup: 5\n                    },\n                    768: {\n                        slidesPerView: 4,\n                        slidesPerGroup: 4\n                    },\n                    594: {\n                        slidesPerView: 3,\n                        slidesPerGroup: 3\n                    },\n                    300: {\n                        slidesPerView: 2,\n                        slidesPerGroup: 2\n                    },\n                    0: {\n                        slidesPerView: 1,\n                        slidesPerGroup: 1\n                    },\n                },\n                pagination: {\n                    el: '.swiper-pagination',\n                    clickable: true\n                },\n                scrollbar: {\n                    el: '.swiper-scrollbar',\n                    // hide: true\n                },\n                navigation: {\n                    nextEl: '.swiper-button-next',\n                    prevEl: '.swiper-button-prev',\n                }\n            });\n        })();\n\n        // Displays correct carousels\n        let movie;\n        if (this.props.itemType === 'MOVIE') {\n            movie =\n                <div>\n                    <ItemCarousel title=\"Upcoming\" MDBConfig={this.props.MDBConfig} items={this.props.moviesUpcoming.results} type={this.props.itemType} />\n                    <ItemCarousel title=\"Popular\" MDBConfig={this.props.MDBConfig} items={this.props.moviesPopular.results} type={this.props.itemType} />\n                    <ItemCarousel title=\"Now Playing\" MDBConfig={this.props.MDBConfig} items={this.props.moviesNowPlaying.results} type={this.props.itemType} />\n                    <ItemCarousel title=\"Top Rated\" MDBConfig={this.props.MDBConfig} items={this.props.moviesTopRated.results} type={this.props.itemType} />\n                </div>;\n        } else if (this.props.itemType === 'TV') {\n            movie =\n                <div>\n                    <ItemCarousel title=\"Airing Today\" MDBConfig={this.props.MDBConfig} items={this.props.TVAiringToday.results} type={this.props.itemType} />\n                    <ItemCarousel title=\"Popular\" MDBConfig={this.props.MDBConfig} items={this.props.TVPopular.results} type={this.props.itemType} />\n                    <ItemCarousel title=\"On The Air\" MDBConfig={this.props.MDBConfig} items={this.props.TVOnTheAir.results} type={this.props.itemType} />\n                    <ItemCarousel title=\"Top Rated\" MDBConfig={this.props.MDBConfig} items={this.props.TVTopRated.results} type={this.props.itemType} />\n                </div>;\n        }\n\n        return (\n            <div className=\"home-container\">\n\n                <HomeHeader itemType={this.props.itemType} MDBConfig={this.props.MDBConfig} items={this.props.itemType === 'TV' ? this.props.TVAiringToday.results : this.props.moviesNowPlaying.results} />\n\n                <div className=\"item-controller\">\n                    <button className=\"item-controller__switch\" onClick={() => { this.props.setItemType('MOVIES'); this.handleMovieFetch(); }}>Movies</button>\n                    <button className=\"item-controller__switch\" onClick={() => { this.props.setItemType('TV'); this.handleTVFetch(); }}>TV Shows</button>\n                </div>\n\n                <div className=\"home-container-main\">\n                    {movie}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    apiKey: state.PostMDBConfig.apiKey,\n    MDBConfig: state.PostMDBConfig,\n\n    itemType: state.setItemType.itemType,\n\n    moviesUpcoming: state.postMoviesUpcoming,\n    moviesPopular: state.postMoviesPopular,\n    moviesNowPlaying: state.postMoviesNowPlaying,\n    moviesTopRated: state.postMoviesTopRated,\n\n    TVAiringToday: state.postTVAiringToday,\n    TVPopular: state.postTVPopular,\n    TVOnTheAir: state.postTVOnTheAir,\n    TVTopRated: state.postTVTopRated,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setItemType: type => dispatch(setItemType(type)),\n\n    postMoviesUpcoming: url => dispatch(postMoviesUpcoming(url)),\n    postMoviesPopular: url => dispatch(postMoviesPopular(url)),\n    postMoviesNowPlaying: url => dispatch(postMoviesNowPlaying(url)),\n    postMoviesTopRated: url => dispatch(postMoviesTopRated(url)),\n\n    postTVAiringToday: url => dispatch(postTVAiringToday(url)),\n    postTVPopular: url => dispatch(postTVPopular(url)),\n    postTVOnTheAir: url => dispatch(postTVOnTheAir(url)),\n    postTVTopRated: url => dispatch(postTVTopRated(url)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import React from 'react';\nimport './Profile.scss';\nimport logo from './images/popcorn.png';\n\nfunction Profile() {\n  return (\n    <div className=\"login\">\n      <div className=\"login-left\">\n        <header>\n          <img src={logo} alt=\"popcorn.png\" />\n          <div className=\"header-text\">\n            <h1>Log In</h1>\n            <h6>Movie app</h6>\n          </div>\n        </header>\n        <div className=\"login-left-buttons\">\n          <button>Log In</button>\n          <button>Browse as Guest</button>\n        </div>\n        <p>Guest users have access to limited features</p>\n      </div>\n      <div className=\"login-right\">\n        <h1>Browse and rate your favourite tv shows</h1>\n      </div>\n    </div>\n  )\n}\n\nexport default Profile;","import { POST_MOVIE_GENRES } from '../types';\n\nconst saveMovieGenres = payload => ({\n    type: POST_MOVIE_GENRES,\n    payload\n});\n\nconst postMovieGenres = url => {\n    return dispatch => {\n        fetch(url)\n            .then(res => res.json())\n            .then(data => dispatch(saveMovieGenres(data)))\n            .catch(error => console.log(error))\n    }\n};\n\nexport default postMovieGenres;","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport './Discover.scss';\n\nimport { getDiscover } from '../../actions/getDiscover';\nimport postMovieGenres from '../../actions/movieActions/postMovieGenres'\n\nfunction Discover(props) {\n\n  console.log(props)\n  console.log(props.genreData.genres)\n\n  const [loadState, setLoadState] = useState(false);\n  const [sortField, setSortField] = useState(\"popularity.desc\");\n  const [includeAdult, setIncludeAdult] = useState(false);\n  const [pageNum, setPageNum] = useState(1);\n  const [yearState, setYearState] = useState('');\n  const [voteAverage, setVoteAverage] = useState('');\n  const [genreState, setGenreState] = useState('');\n\n  useEffect(() => {\n    if (!loadState) {\n      const defaultQuery = `https://api.themoviedb.org/3/discover/movie?api_key=${props.apiKey}&language=en-US&sort_by=popularity.desc&page=1`\n      props.discoverData.results[0]\n        ?\n        console.log('Query Already Sent')\n        :\n        props.getDiscover(defaultQuery)\n      const genreQuery = `https://api.themoviedb.org/3/genre/movie/list?api_key=fb8a39c9807f2120f494db319897180d&language=en-US`;\n      props.genreData.genres\n        ?\n        console.log('Genre Already Gotten')\n        :\n        props.getGenres(genreQuery)\n      toggleLoadState();\n    }\n  }, [genreState, includeAdult, loadState, pageNum, props, sortField, voteAverage, yearState])\n\n  const toggleLoadState = () => {\n    setLoadState(true);\n  }\n\n  const handleFilterQuery = (e) => {\n    e.preventDefault();\n    const filterQuery = `https://api.themoviedb.org/3/discover/movie?api_key=fb8a39c9807f2120f494db319897180d&language=en-US&sort_by=${sortField}&include_adult=${includeAdult}&page=${pageNum}${yearState ? '&year=' + yearState : ''}${voteAverage ? '&vote_average.gte=' + voteAverage : ''}${genreState ? '&with_genres=' + genreState : ''}`\n    console.log(filterQuery)\n    props.getDiscover(filterQuery)\n  }\n\n  useEffect(() => {\n    // If search results in props not exist yet, then fetch the data, if it does don't do anything.\n    (props.discoverData.page === pageNum) ?\n      console.log(pageNum)\n      :\n      props.getDiscover(`https://api.themoviedb.org/3/discover/movie?api_key=fb8a39c9807f2120f494db319897180d&language=en-US&sort_by=${sortField}&include_adult=${includeAdult}&page=${pageNum}&year=${yearState}&$vote_average.gte=${voteAverage}&with_genres=${genreState}`)\n  }, [props, pageNum, sortField, includeAdult, yearState, voteAverage, genreState]);\n\n  const handleSortField = (e) => {\n    console.log(e.target.value)\n    setSortField(e.target.value)\n  }\n  const handleYearState = (e) => {\n    console.log(e.target.value)\n    setYearState(e.target.value)\n  }\n  const handleVoteAverage = (e) => {\n    console.log(e.target.value)\n    setVoteAverage(e.target.value)\n  }\n  const handleGenreState = (e) => {\n    console.log(e.target.value)\n    setGenreState(e.target.value)\n  }\n\n\n\n  return (\n    <div className=\"discover-container\">\n      <h3>Discover</h3>\n      <hr />\n      <div className=\"discover-container-filterField\">\n        <form onSubmit={handleFilterQuery}>\n          <div className=\"discover-container-filterField-settings\">\n            <select onChange={handleSortField} className=\"sort_field\">\n              <option value=\"popularity.desc\">Popularity</option>\n              <option value=\"release_date.desc\">Release Date</option>\n              <option value=\"vote_average.desc\">Vote Average</option>\n              <option value=\"vote_count.desc\">Vote Count</option>\n            </select>\n            <input placeHolder=\"Vote Average\" onChange={handleVoteAverage} className=\"vote_average\" type=\"number\" min=\"1\" max=\"10\" />\n            <input placeHolder=\"Year\" onChange={handleYearState} className=\"year\" type=\"number\" min=\"1800\" max=\"2050\" />\n            {/* <input placeHolder=\"Genres\" onChange={handleGenreState} className=\"with_genres\" type=\"text\" /> */}\n            <select onChange={handleGenreState} className=\"with_genres\">\n              {\n                props.genreData.genres\n                  ?\n                  props.genreData.genres.map(data =>\n                    <option value={data.id}>{data.name}</option>\n                  )\n                  :\n                  console.log('Genre Data does not exist yet')\n              }\n            </select>\n          </div>\n          <input className=\"submit\" value=\"Search\" type=\"submit\" />\n        </form>\n      </div>\n      <div className=\"discover-container-itemField\">\n        {props.discoverData.results.map(result =>\n          <Link className=\"discover-container-itemField-item\" to={`/movie-app/details/${props.type.toLowerCase()}/${result.id}`}>\n            <div className=\"discover-container-itemField-item-top\">\n              <img src={`https://image.tmdb.org/t/p/w342/${result.poster_path}`} />\n            </div>\n            <h3>{result.title}</h3>\n            <div className=\"discover-container-itemField-item-bottom\">\n              <i className=\"fas fa-star highlight\"></i>\n              <h6>{result.vote_average}</h6>\n            </div>\n          </Link>\n        )}\n      </div>\n      <div className=\"searchResults-navigation\">\n        <button onClick={() => setPageNum((pageNum - 1 < 1) ? 1 : (pageNum - 1))}>Previous</button>\n        <button onClick={() => setPageNum(\n          props.discoverData.results ?\n            (props.discoverData.results.length < 20) ? pageNum : (pageNum + 1)\n            :\n            1\n        )}> Next</button>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  apiKey: state.getDiscover.apiKey,\n  discoverData: state.getDiscover,\n  type: state.setItemType.itemType,\n  genreData: state.postMovieGenres\n})\n\nconst mapDispatchToProps = dispatch => ({\n  getDiscover: url => dispatch(getDiscover(url)),\n  getGenres: url => dispatch(postMovieGenres(url)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Discover);","import { GET_DISCOVER } from './types';\n\nconst discoverData = payload => ({\n  type: GET_DISCOVER,\n  payload\n})\n\nexport const getDiscover = url => {\n  return dispatch => {\n    fetch(url)\n      .then(results => results.json())\n      .then(data => dispatch(discoverData(data)))\n      .catch(err => console.log(err))\n  }\n}","import { SEARCH_DATA } from './types';\n\nconst saveData = (payload) => ({\n  type: SEARCH_DATA,\n  payload\n});\n\nconst searchData = url => {\n  return dispatch => {\n    fetch(url)\n      .then(res => res.json())\n      .then(data => dispatch(saveData(data)))\n      .catch(error => console.log(error))\n  }\n}\n\nexport default searchData;","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport searchData from '../../actions/searchData';\n\nimport './SearchResults.scss';\n\nfunction SearchResults(props) {\n    console.log(props);\n    console.log(props.searchResults.results);\n\n    const [searchState, setSearchState] = useState([props.match.params.query]);\n    const [pageState, setPageState] = useState(1);\n\n    useEffect(() => {\n        // If search results in props not exist yet, then fetch the data, if it does don't do anything.\n        (props.match.params.query === searchState) ?\n            console.log('Does not exist yet')\n            :\n            props.searchData(`https://api.themoviedb.org/3/search/movie?api_key=${props.apiKey}&language=en-US&query=${props.match.params.query}&page=1&include_adult=false`)\n        setSearchState(props.match.params.query)\n\n    }, [props, searchState]);\n\n    useEffect(() => {\n        // If search results in props not exist yet, then fetch the data, if it does don't do anything.\n        (props.searchResults.page === pageState) ?\n            console.log('Same Page')\n            :\n            props.searchData(`https://api.themoviedb.org/3/search/movie?api_key=${props.apiKey}&language=en-US&query=${props.match.params.query}&page=${pageState}&include_adult=false`)\n\n    }, [props, pageState]);\n\n\n\n    return (\n        <div className=\"searchResults\">\n            <h3>Search Results for \"{props.match.params.query}\"</h3>\n            <hr />\n            <div className=\"searchResults-container\">\n                {/* Loop through and display all movies with existing images */}\n                {props.searchResults.results ?\n                    props.searchResults.results.map(result => (result.poster_path ?\n                        <Link className=\"searchResults-container-item\" to={`/movie-app/details/${props.itemType.toLowerCase()}/${result.id}`} >\n                            <img src={`https://image.tmdb.org/t/p/w342/${result.poster_path}`} alt=\"pic\" />\n                            <h3>{result.title}</h3>\n                            <div className=\"discover-container-itemField-item-bottom\">\n                                <i className=\"fas fa-star highlight\"></i>\n                                <h6>{result.vote_average}</h6>\n                            </div>\n                        </Link>\n                        :\n                        console.log('Image doesnt exist')\n                    ))\n                    :\n                    <p>No Results :(</p>}\n            </div>\n            <div className=\"searchResults-navigation\">\n                <button onClick={() => setPageState((pageState - 1 < 1) ? 1 : (pageState - 1))}>Previous</button>\n                <button onClick={() => setPageState(\n                    props.searchResults.results\n                        ?\n                        (((props.searchResults.results.length < 20)\n                            ?\n                            pageState\n                            :\n                            (pageState + 1)))\n                        :\n                        1\n                )}\n                > Next</button>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    apiKey: state.searchData.apiKey,\n    searchResults: state.searchData,\n    itemType: state.setItemType.itemType,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    searchData: url => dispatch(searchData(url)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchResults);","import { GET_MOVIE_DETAILS } from '../types.js'\n\nconst saveMovieDetails = payload => ({\n    type: GET_MOVIE_DETAILS,\n    payload\n});\n\nconst getMovieDetails = url => {\n    return dispatch => {\n        console.log('a')\n        fetch(url)\n            .then(res => res.json())\n            .then(data => dispatch(saveMovieDetails(data)))\n            .catch(error => console.log(error))\n    }\n};\n\nexport default getMovieDetails;","import { GET_MOVIE_CREDITS } from '../types';\n\nconst saveMovieCredits = payload => ({\n    type: GET_MOVIE_CREDITS,\n    payload\n});\n\nconst getMovieCredits = url => {\n    console.log('b');\n    return dispatch => {\n        fetch(url)\n            .then(res => res.json())\n            .then(data => dispatch(saveMovieCredits(data)))\n            .catch(error => console.log(error))\n    };\n};\n\nexport default getMovieCredits;","\nimport { GET_MOVIE_TRAILERS } from '../types';\n\nconst saveMovieTrailers = payload => ({\n    type: GET_MOVIE_TRAILERS,\n    payload\n});\n\nconst getMovieTrailers = url => {\n    console.log('c')\n    return dispatch => {\n        fetch(url)\n            .then(res => res.json())\n            .then(data => dispatch(saveMovieTrailers(data)))\n            .catch(error => console.log(error))\n    };\n};\n\nexport default getMovieTrailers;","import { GET_MOVIE_REVIEWS } from '../types';\n\nconst saveMovieReviews = payload => ({\n    type: GET_MOVIE_REVIEWS,\n    payload\n});\n\nconst getMovieReviews = url => {\n    console.log('d')\n    return dispatch => {\n        fetch(url)\n            .then(res => res.json(res))\n            .then(data => dispatch(saveMovieReviews(data)))\n            .catch(error => console.log(error))\n    };\n};\n\nexport default getMovieReviews;","import { GET_TV_DETAILS } from '../types';\n\nconst saveTVDetails = payload => ({\n    type: GET_TV_DETAILS,\n    payload\n});\n\nconst getTVDetails = url => {\n    return dispatch => {\n        fetch(url)\n            .then(res => res.json())\n            .then(data => dispatch(saveTVDetails(data)))\n            .catch(error => console.log(error))\n    };\n};\n\nexport default getTVDetails;","import { GET_TV_CREDITS } from '../types';\n\nconst saveTVCredits = payload => ({\n    type: GET_TV_CREDITS,\n    payload\n});\n\nconst getTVCredits = url => {\n    return dispatch => {\n        fetch(url)\n            .then(res => res.json())\n            .then(data => dispatch(saveTVCredits(data)))\n            .catch(error => console.log(error))\n    };\n};\n\nexport default getTVCredits;","\nimport { GET_TV_TRAILERS } from '../types';\n\nconst saveTVTrailers = payload => ({\n    type: GET_TV_TRAILERS,\n    payload\n});\n\nconst getTVTrailers = url => {\n    return dispatch => {\n        fetch(url)\n            .then(res => res.json())\n            .then(data => dispatch(saveTVTrailers(data)))\n            .catch(error => console.log(error))\n    };\n};\n\nexport default getTVTrailers;","import { GET_TV_REVIEWS } from '../types';\n\nconst saveTVReviews = payload => ({\n    type: GET_TV_REVIEWS,\n    payload\n});\n\nconst getTVReviews = url => {\n    return dispatch => {\n        fetch(url)\n            .then(res => res.json())\n            .then(data => dispatch(saveTVReviews(data)))\n            .catch(error => console.log(error))\n    };\n};\n\nexport default getTVReviews;","import React from 'react';\n\nimport './ItemHeader.scss';\n\nclass ItemHeader extends React.Component {\n\n    initHeader() {\n        let headerData = this.props.details;\n        console.log(this.refs)\n        // Function need to parse the headerData into JSX.\n\n        if (!headerData === false) {\n            console.log(headerData)\n            return (\n                <>\n                    <header className=\"item-header\" style={{ backgroundImage: `url(http://image.tmdb.org/t/p/original/${headerData.backdrop_path})` }}>\n                        <div className=\"item-header-container\">\n                            <div className=\"item-header-container-top\">\n                                <div onClick={this.props.history.goBack}>\n                                    <i className=\"fas fa-chevron-left fa-3x\"></i>\n                                </div>\n                                <i className=\"fas fa-share fa-3x\"></i>\n                            </div>\n                            <div className=\"item-header-container-bottom\">\n                                <div className=\"item-header-container-bottom-information\">\n                                    <img className=\"item-header-container-bottom-information-poster\" src={`http://image.tmdb.org/t/p/w300/${headerData.poster_path}`} />\n                                    <div className=\"item-header-container-bottom-information-text\">\n                                        <h2>{headerData.title}</h2>\n                                        <div className=\"item-header-container-bottom-information-text-rating\">\n                                            <h3>{headerData.vote_average}</h3>\n                                            <i className={`fas fa-star ${(headerData.vote_average >= 1) ? (headerData.vote_average >= 2) ? 'highlight' : 'highlight-half' : ''}`}></i>\n                                            <i className={`fas fa-star ${(headerData.vote_average >= 3) ? (headerData.vote_average >= 4) ? 'highlight' : 'highlight-half' : ''}`}></i>\n                                            <i className={`fas fa-star ${(headerData.vote_average >= 5) ? (headerData.vote_average >= 6) ? 'highlight' : 'highlight-half' : ''}`}></i>\n                                            <i className={`fas fa-star ${(headerData.vote_average >= 7) ? (headerData.vote_average >= 8) ? 'highlight' : 'highlight-half' : ''}`}></i>\n                                            <i className={`fas fa-star ${(headerData.vote_average >= 9) ? (headerData.vote_average >= 10) ? 'highlight' : 'highlight-half' : ''}`}></i>\n                                        </div>\n                                        <div className=\"item-header-container-bottom-information-text-language\">\n                                            {headerData.status ? headerData.status : ''} | {headerData.original_language ? headerData.original_language : ''}\n                                        </div>\n                                        <div className=\"item-header-container-bottom-information-text-genres\">\n                                            {headerData.genres[0] ? headerData.genres[0].name : ''} | {headerData.genres[1] ? headerData.genres[1].name : ''}\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"item-header-container-bottom-like\">\n                                    <i className=\"fas fa-heart fa-3x\"></i>\n                                </div>\n                            </div>\n                        </div>\n                    </header>\n                    <div className=\"headerOverlay\"></div>\n                </>\n            )\n        }\n        else {\n            return (\n                <p>Film Information not found</p>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <>\n                {this.initHeader()}\n            </>\n        )\n    }\n}\n\nexport default ItemHeader;","import React from 'react';\n\nimport './PeopleCarousel.scss';\nimport Swiper from 'swiper';\n\nclass PeopleCarousel extends React.Component {\n\n    render() {\n        console.log(this.props.details.overview)\n        var swiper = new Swiper('.s1', {\n            loop: false,\n            slidesPerView: 3,\n            spaceBetween: 0,\n            pagination: {\n                el: 'swiper-pagination',\n                clickable: true,\n            },\n            navigation: {\n                nextEl: '.swiper-button-next',\n                prevEl: '.swiper-button-prev',\n            },\n            breakpoints: {\n                300: {\n                    slidesPerView: 1,\n                },\n                600: {\n                    slidesPerView: 2,\n                },\n                768: {\n                    slidesPerView: 3,\n                },\n                900: {\n                    slidesPerView: 4,\n                },\n                1250: {\n                    slidesPerView: 5,\n                }\n            }\n        })\n        return (\n            <main className=\"item-body\">\n                <div className=\"item-body-content\">\n                    <div className=\"item-body-content-summary\">\n                        <h2>Summary</h2>\n                        <p>{this.props.details.overview}</p>\n                    </div>\n                    <div className=\"swiper-container s1\" >\n                        <h2>Cast</h2>\n                        <div className=\"swiper-wrapper\">\n                            {this.props.credits.cast.map(char => {\n                                return (\n                                    char.profile_path ?\n                                        <div className=\"swiper-slide\">\n                                            <div className=\"flip-card\">\n                                                <div className=\"flip-card-inner\">\n                                                    <img className=\"flip-card-front\" src={`https://image.tmdb.org/t/p/w342/${char.profile_path}`} />\n                                                    <div className=\"flip-card-back\">\n                                                        <button>Details</button>\n                                                        <button>Information</button>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <h4>{char.name}</h4>\n                                        </div>\n                                        :\n                                        null\n                                )\n                            })}\n                        </div>\n                        <div className=\"swiper-pagination\"></div>\n                        <div className=\"swiper-button-next swiper-button-white\"></div>\n                        <div className=\"swiper-button-prev swiper-button-white\"></div>\n                    </div>\n                </div>\n            </main>\n        )\n    }\n\n}\n\nexport default PeopleCarousel;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './ItemReviews.scss';\n\nclass ItemReviews extends React.Component {\n\n    render() {\n        console.log(this.props)\n        return (\n\n            <div className=\"ItemReviews\" >\n                <h2>Reviews</h2>\n                <div className=\"ItemReviews-content\">\n                    {this.props.reviews.results.length > 0 ?\n                        this.props.reviews.results.map(review => (\n                            <div className=\"ItemReviews-content-review border-bar\">\n                                <h3 className=\"ItemReviews-content-review-header\">\n                                    {review.author}\n                                </h3>\n                                <p className=\"ItemReviews-content-review-paragraph\">\n                                    {review.content.length > 1000 ? `${review.content.slice(0, 1000)}...` : review.content}\n                                </p>\n                                <a href={review.url}>\n                                    <span>See full review</span>\n                                    <i class=\"fas fa-chevron-right\"></i>\n                                </a>\n                            </div>\n                        ))\n                        :\n                        <p>No Reviews Found :( </p>\n                    }\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default ItemReviews;","import React from 'react';\nimport Swiper from 'swiper';\n\nimport './ItemTrailers.scss';\n\nclass ItemTrailers extends React.Component {\n\n    render() {\n        var swiper = new Swiper('.s2', {\n            slidesPerView: 3,\n            spaceBetween: 30,\n            slidesPerGroup: 3,\n            loopFillGroupWithBlank: true,\n            navigation: {\n                nextEl: '.swiper-button-next',\n                prevEl: '.swiper-button-prev',\n            },\n            breakpoints: {\n                300: {\n                    slidesPerView: 1,\n                },\n                600: {\n                    slidesPerView: 2,\n                },\n                900: {\n                    slidesPerView: 3,\n                },\n                1400: {\n                    slidesPerView: 4,\n                },\n                1800: {\n                    slidesPerView: 5,\n                },\n                2000: {\n                    slidesPerView: 6,\n                }\n            }\n        });\n        return (\n            <div className=\"ItemTrailers\">\n                <h2 className=\"ItemTrailers-headername\">Trailers </h2>\n                <div className=\"swiper-container s2\">\n                    <div className=\"swiper-wrapper\">\n                        {this.props.trailers.results ?\n                            this.props.trailers.results.map(trailer => (\n                                <div className=\"swiper-slide\" style={{ width: '150px' }}>\n                                    <iframe width=\"100%\" height=\"250px\" frameborder=\"0\" gesture=\"media\" allow=\"encrypted-media\" allowfullscreen src={`https://www.youtube.com/embed/${trailer ? trailer.key : ''}`}>\n                                    </iframe>\n                                </div>\n                            ))\n                            :\n                            <p>No Trailers Found :( </p>\n                        }\n                    </div>\n                    <div className=\"swiper-button-next swiper-button-white\"></div>\n                    <div className=\"swiper-button-prev swiper-button-white\"></div>\n                </div>\n            </div>\n        )\n    }\n\n}\nexport default ItemTrailers;","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport getMovieDetails from '../../actions/movieActions/getMovieDetails';\nimport getMovieCredits from '../../actions/movieActions/getMovieCredits';\nimport getMovieTrailers from '../../actions/movieActions/getMovieTrailers';\nimport getMovieReviews from '../../actions/movieActions/getMovieReviews';\n\nimport getTVDetails from '../../actions/TVActions/getTVDetails';\nimport getTVCredits from '../../actions/TVActions/getTVCredits';\nimport getTVTrailers from '../../actions/TVActions/getTVTrailers';\nimport getTVReviews from '../../actions/TVActions/getTVReviews';\n\nimport ItemHeader from '../ItemHeader/ItemHeader';\nimport PeopleCarousel from '../PeopleCarousel/PeopleCarousel';\nimport ItemReviews from '../ItemReviews/ItemReviews';\nimport ItemTrailers from '../ItemTrailers/ItemTrailers';\n\nimport './ItemDetails.scss';\n\n\nclass ItemDetails extends React.Component {\n\n    // Order of the lifecycle components here is completely different to alan's\n    // even though the code is almost identical.\n\n    componentDidMount() {\n        let item_id = this.props.match.params.id\n        this.getFilmData(item_id)\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        console.log('componentWillMount')\n        if (nextProps.match.params.id !== this.props.match.params.id) {\n            this.getFilmData(nextProps.match.params.id, nextProps.match.params.type);\n        }\n    }\n\n    getFilmData(id, itemType = this.props.match.params.type) {\n        let apiKey = this.props.MDBConfig.apiKey;\n        // this.props.match will be accessible as soon as any <Route path=\"\"> type tag is used in JSX parents.\n        switch (itemType) {\n            case \"movie\":\n                this.props.getMovieDetails(`https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}&language=en-US`)\n                this.props.getMovieCredits(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${apiKey}`)\n                this.props.getMovieTrailers(`https://api.themoviedb.org/3/movie/${id}/videos?api_key=${apiKey}&language=en-US`)\n                this.props.getMovieReviews(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${apiKey}&language=en-US&page=1`)\n                break\n            case \"tv\":\n                this.props.getTVDetails(`https://api.themoviedb.org/3/tv/${id}?api_key=${apiKey}&language=en-US`)\n                this.props.getTVCredits(`https://api.themoviedb.org/3/tv/${id}/credits?api_key=${apiKey}`)\n                this.props.getTVTrailers(`https://api.themoviedb.org/3/tv/${id}/videos?api_key=${apiKey}&language=en-US`)\n                this.props.getTVReviews(`https://api.themoviedb.org/3/tv/${id}/reviews?api_key=${apiKey}&language=en-US&page=1`)\n                break\n            default:\n                console.log('Get Movie/TV Info Failed')\n        }\n    }\n    render() {\n\n        let itemType = this.props.match.params.type;\n        let dispDetails, dispCredits, dispTrailers, dispReviews;\n        switch (itemType) {\n            case \"movie\":\n                dispDetails = this.props.movieDetails;\n                dispCredits = this.props.movieCredits;\n                dispTrailers = this.props.movieTrailers;\n                dispReviews = this.props.movieReviews;\n                break;\n            case \"tv\":\n                dispDetails = this.props.TVDetails;\n                dispCredits = this.props.TVCredits;\n                dispTrailers = this.props.TVTrailers;\n                dispReviews = this.props.TVReviews;\n                break;\n            default:\n                console.log('handeItemDisplay has fucking failed')\n        }\n\n        return (\n            <div className=\"item-main-content\">\n                <ItemHeader history={this.props.history} details={dispDetails.overview ? dispDetails : ''} />\n                <PeopleCarousel details={dispDetails ? dispDetails : ''} credits={dispCredits ? dispCredits : ''} />\n                <ItemTrailers trailers={dispTrailers ? dispTrailers : ''} />\n                <ItemReviews reviews={dispReviews ? dispReviews : ''} />\n            </div>\n        )\n    }\n}\n\n// Get the initial states specified by the corresponding reducers\nconst mapStateToProps = state => ({\n    // Need APIKEY in PostMDB Config to make calls:\n    apiKey: state.PostMDBConfig.apiKey,\n    MDBConfig: state.PostMDBConfig,\n\n    // Used to make decision on whether to get details of specific movie or tv show\n    itemType: state.setItemType,\n\n    movieDetails: state.getMovieDetails,\n    movieCredits: state.getMovieCredits,\n    movieTrailers: state.getMovieTrailers,\n    movieReviews: state.getMovieReviews,\n\n    TVDetails: state.getTVDetails,\n    TVCredits: state.getTVCredits,\n    TVTrailers: state.getTVTrailers,\n    TVReviews: state.getTVReviews,\n});\n\n// Use the imported actions objects to dispatch an action to the redux store.\nconst mapDispatchToProps = dispatch => ({\n\n    getMovieDetails: url => dispatch(getMovieDetails(url)),\n    getMovieCredits: url => dispatch(getMovieCredits(url)),\n    getMovieTrailers: url => dispatch(getMovieTrailers(url)),\n    getMovieReviews: url => dispatch(getMovieReviews(url)),\n\n    getTVDetails: url => dispatch(getTVDetails(url)),\n    getTVCredits: url => dispatch(getTVCredits(url)),\n    getTVTrailers: url => dispatch(getTVTrailers(url)),\n    getTVReviews: url => dispatch(getTVReviews(url)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemDetails);","import { TOGGLE_NAV } from './types';\n\nconst toggleNav = () => ({\n    type: TOGGLE_NAV\n});\n\nexport default toggleNav","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport logo from './images/popcorn.png';\n\n// SCSS Stylesheets\nimport './MainNav.scss';\nimport toggleNav from '../../actions/toggleNav';\n\nfunction MainNav(props) {\n\n    console.log(props)\n\n    const [inputState, setInputState] = useState('');\n\n    const handleHamburgerClickEvent = () => {\n        props.toggleNav();\n    }\n\n    const handleInputChange = (e) => {\n        console.log(e.target.value)\n        setInputState(e.target.value);\n    }\n\n    const handleSearchQuery = () => {\n        return (\n            document.getElementById('navbar-search')\n                ?\n                inputState\n                :\n                ''\n        );\n    }\n\n    return (\n        <nav className=\"nav-main\">\n            <div className={`nav-top-section ${props.navStatus ? '' : 'hide'}`}>\n                <Link to={'/movie-app/'}><img src={logo}></img></Link>\n\n                {/* Navbar search: IMPORTANT NOTE, IDK HOW PRESSING ENTER ON THE FORM CAUSES IT TO RUN THE handleSearchQuery function comeback and elaborate since i thought it should only\n                work when i click on the search button?\n                */}\n                <div className=\"nav-searchbar\">\n                    <form className=\"nav-search-form\">\n                        {/* Input will result in a consistent change in fieldstate for the mainnav component */}\n                        <input onChange={handleInputChange} placeholder=\"search...\" className=\"nav-search-form-input\" type=\"text\" name=\"\" id=\"navbar-search\" />\n                        <Link to={inputState ? `/movie-app/search-results/${handleSearchQuery()}` : `${props.match.url}`}>\n                            {/* Note: You DO NOT need to write anything for an enter event in this situation since type=\"submit\" ensures that when the user presses enter\n                        the form will automatically submit. \n                         */}\n                            <button className=\"nav-search-form-button\" type=\"submit\"><i className=\"fas fa-search fa-2x\"></i></button>\n                        </Link>\n                    </form>\n                </div>\n            </div>\n\n            <button onClick={handleHamburgerClickEvent} className={`hamburger hamburger--spin js-hamburger ${props.navStatus ? 'is-active' : ''}`} type=\"button\">\n                <span className=\"hamburger-box\">\n                    <span className=\"hamburger-inner\"></span>\n                </span>\n            </button>\n\n            <div className={`nav-split-section ${props.navStatus ? '' : 'hide'}`}>\n                <Link to={'/movie-app/'}>\n                    <div className=\"nav-split-section-item\">\n                        <i className=\"fas fa-home fa-2x\"></i>\n                    </div>\n                </Link>\n                <Link to={'/movie-app/login'}>\n                    <div className=\"nav-split-section-item\">\n                        <i className=\"fas fa-user-circle fa-2x\"></i>\n                    </div>\n                </Link>\n                <Link to={'/movie-app/discover'}>\n                    <div className=\"nav-split-section-item\">\n                        <i className=\"far fa-compass fa-2x\"></i>\n                    </div>\n                </Link>\n            </div>\n        </nav>\n    )\n\n}\n// Give the component props some important state properties via the following container\nconst mapStateToProps = state => ({\n    apiKey: state.PostMDBConfig.apiKey,\n    navStatus: state.toggleNav.navStatus\n})\n// Give the component props the important toggleNav function via the following container.\nconst mapDispatchToProps = dispatch => ({\n    toggleNav: () => dispatch(toggleNav())\n})\n\n\n// Get from the current redux store the state/dispatches & map them to props\n// ...before injecting them into the MainNav component {Thus completing it as a container component}.\nexport default connect(mapStateToProps, mapDispatchToProps)(MainNav);","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n// SCSS\nimport './MainFooter.scss';\n\nfunction MainFooter() {\n    return (\n        <footer className=\"main-footer\">\n            <section className=\"main-footer-left\">\n                <div className=\"main-footer-left-header\">\n                    <h1 className=\"main-footer-left-header-name\">Movie App</h1>\n                    <hr />\n                    <Link to=\"/movie-app/\">Home</Link>\n                    <Link to=\"/movie-app/login\">Profile</Link>\n                    <Link to=\"/movie-app/discover\">Discover</Link>\n                </div>\n                <div className=\"main-footer-left-contacts\">\n                    <div className=\"main-footer-left-contacts-item\">\n                        <h3 className=\"main-footer-portfolio-header\">Portfolio:</h3>\n                        <p><a href=\"http://3drdsh3in.github.io\">3drdsh3in/github.io</a></p>\n                    </div>\n                    <div className=\"main-footer-left-contacts-item\">\n                        <h3 className=\"main-footer-phone-header\">Phone Number:</h3>\n                        <p>777-777-7777</p>\n                    </div>\n                </div>\n            </section>\n            <section className=\"main-footer-right\">\n\n                <div className=\"main-footer-right-icons\">\n                    <a href=\"https://twitter.com/themoviedb?lang=en\"><i className=\"fab fa-twitter fa-2x\"></i></a>\n                    <a href=\"https://www.facebook.com/themoviedb/\"><i className=\"fab fa-facebook-f fa-2x\"></i></a>\n                    <a href=\"https://www.themoviedb.org/documentation/api\"><i className=\"fas fa-book fa-2x\"></i></a>\n                </div>\n\n                <img className=\"main-footer-mdb-logo\" src=\"https://www.themoviedb.org/assets/2/v4/logos/powered-by-rectangle-green-dcada16968ed648d5eb3b36bbcfdd8cdf804f723dcca775c8f2bf4cea025aad6.svg\" />\n\n                <div className=\"main-footer-right-copyright\">\n                    <p>Copyright &copy;2020 by Edward Shen</p>\n                </div>\n            </section>\n        </footer >\n    )\n}\n\nexport default MainFooter;","import React from 'react';\n\nimport './App.css';\nimport Home from './components/Home/Home';\nimport Profile from './components/Profile/Profile';\nimport Discover from './components/Discover/Discover'\nimport SearchResults from './components/SearchResults/SearchResults';\nimport ItemDetails from './components/ItemDetails/ItemDetails';\nimport MainNav from './components/MainNav/MainNav';\nimport MainFooter from './components/MainFooter/MainFooter';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nfunction App() {\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Route path=\"/movie-app/\" component={MainNav} />\n        <Route path=\"/movie-app/\" exact component={Home} />\n        {/* Renders out a component based on a corresponding url */}\n        <Route path=\"/movie-app/details/:type/:id\" exact component={ItemDetails} />\n        <Route path=\"/movie-app/search-results/:query\" exact component={SearchResults} />\n        <Route path=\"/movie-app/login\" exact component={Profile} />\n        <Route path=\"/movie-app/discover\" exact component={Discover} />\n        <Route path=\"/movie-app/\" component={MainFooter} />\n      </div>\n    </Router>\n  );\n}\n\nconst mapStateToProps = state => ({\n  apiKey: state.PostMDBConfig.apiKey\n});\n\nexport default connect(mapStateToProps)(App);","\nimport { POST_MDB_CONFIG } from '../actions/types';\n\nconst initialState = {\n    // Your key:\n    apiKey: 'fb8a39c9807f2120f494db319897180d',\n    // Alan's API key:\n    // apiKey: '12a5356516535d4d67654a936a088c1b'\n};\n\nconst PostMDBConfig = (state = initialState, action) => {\n    switch (action.type) {\n        case POST_MDB_CONFIG:\n            return {\n                // The Initial State /w the apiKey component:\n                ...state,\n                // The entire ... idk for now lol.\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n}\n\nexport default PostMDBConfig;","import { POST_MOVIE_GENRES } from '../../actions/types';\n\nconst initialState = {\n  results: []\n}\n\nconst postMovieGenres = (state = initialState, action) => {\n  switch (action.type) {\n    case POST_MOVIE_GENRES:\n      return ({\n        ...action.payload\n      })\n    default:\n      return state\n  }\n}\n\nexport default postMovieGenres;","import { SET_ITEM_TYPE_MOVIE, SET_ITEM_TYPE_TV } from '../actions/types';\n\nconst initialState = {\n    itemType: 'MOVIE'\n};\n\nconst setItemType = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_ITEM_TYPE_MOVIE:\n            return {\n                itemType: 'MOVIE'\n            };\n        case SET_ITEM_TYPE_TV:\n            return {\n                itemType: 'TV'\n            };\n        default:\n            return state;\n    }\n};\n\nexport default setItemType;","\nimport { TOGGLE_NAV } from '../actions/types';\n\n// Initial State of the Navbar hamburger toggle is false.\nconst initialState = {\n    navStatus: false\n};\n\nconst toggleMav = (state = initialState, action) => {\n    // console.log('Nav Status Initialized')\n    switch (action.type) {\n        // In the case a TOGGLE_NAV action is called ...\n        case TOGGLE_NAV:\n            return {\n                ...state,\n                navStatus: state.navStatus ? false : true\n            }\n        default:\n            return state;\n    }\n}\n\nexport default toggleMav;","import { SEARCH_DATA } from '../actions/types';\n\nconst initialState = {\n  apiKey: 'fb8a39c9807f2120f494db319897180d',\n}\n\nconst searchData = (state = initialState, action) => {\n  switch (action.type) {\n    case SEARCH_DATA:\n      return {\n        ...state,\n        ...action.payload\n      }\n    default:\n      return state;\n  }\n}\n\nexport default searchData;","import { POST_MOVIES_NOWPLAYING } from '../../actions/types';\n\nconst initialState = {\n    results: []\n}\n\nconst postMoviesNowPlaying = (state = initialState, action) => {\n    switch (action.type) {\n        case POST_MOVIES_NOWPLAYING:\n            return ({\n                // ...state,\n                ...action.payload\n            })\n        default:\n            return state;\n    }\n}\n\nexport default postMoviesNowPlaying;","import { POST_MOVIES_POPULAR } from '../../actions/types';\n\nconst initialState = {\n    results: []\n}\n\nconst postMoviesPopular = (state = initialState, action) => {\n    switch (action.type) {\n        case POST_MOVIES_POPULAR:\n            return {\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nexport default postMoviesPopular;","import { POST_MOVIES_TOP_RATED } from '../../actions/types';\n\nconst initialState = {\n    results: []\n};\n\nconst postMoviesTopRated = (state = initialState, actions) => {\n    switch (actions.type) {\n        case POST_MOVIES_TOP_RATED:\n            return {\n                ...state,\n                ...actions.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default postMoviesTopRated;","import { POST_MOVIES_UPCOMING } from '../../actions/types';\n\nconst initialState = {\n    results: []\n};\n\nconst postMoviesUpcoming = (state = initialState, action) => {\n    switch (action.type) {\n        case POST_MOVIES_UPCOMING:\n            return {\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state\n    }\n};\n\nexport default postMoviesUpcoming;","import { GET_MOVIE_DETAILS } from '../../actions/types'\n\nconst initialState = {\n\n};\n\nconst getMovieDetails = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_MOVIE_DETAILS:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default getMovieDetails;","import { GET_MOVIE_CREDITS } from '../../actions/types';\n\nconst initialState = {\n    cast: []\n};\n\nconst getMovieCredits = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_MOVIE_CREDITS:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default getMovieCredits;","import { GET_MOVIE_TRAILERS } from '../../actions/types';\n\nconst initialState = {\n    results: []\n}\n\nconst getMoviesRated = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_MOVIE_TRAILERS:\n            return {\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nexport default getMoviesRated;","import { GET_MOVIE_REVIEWS } from '../../actions/types';\n\nconst initialState = {\n    results: []\n}\n\nconst getMovieReviews = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_MOVIE_REVIEWS:\n            return {\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nexport default getMovieReviews;","\nimport { GET_MOVIE_FAVOURITES } from '../../actions/types';\n\nconst initialState = {\n    results: []\n};\n\nconst getMovieFavorites = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_MOVIE_FAVOURITES:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default getMovieFavorites;","import { GET_MOVIES_RATED } from '../../actions/types';\n\nconst initialState = {\n    results: []\n};\n\nconst getMoviesRated = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_MOVIES_RATED:\n            return {\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nexport default getMoviesRated;","import { RATE_MOVIE } from '../../actions/types'\n\nconst initialState = {};\n\nconst rateMovie = (state = initialState, action) => {\n    switch (action.type) {\n        case RATE_MOVIE:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default rateMovie;","import { POST_TV_AIRING_TODAY } from '../../actions/types';\n\nconst intialState = {\n    results: []\n};\n\nconst postTVAiringToday = (state = intialState, action) => {\n    switch (action.type) {\n        case POST_TV_AIRING_TODAY:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default postTVAiringToday;","import { POST_TV_POPULAR } from '../../actions/types';\n\nconst initialState = {\n    results: []\n};\n\nconst postTVPopular = (state = initialState, action) => {\n    switch (action.type) {\n        case POST_TV_POPULAR:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default postTVPopular;","import { POST_TV_ON_THE_AIR } from '../../actions/types';\n\nconst initialState = {\n    results: []\n};\n\nconst postTVOnTheAir = (state = initialState, action) => {\n    switch (action.type) {\n        case POST_TV_ON_THE_AIR:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default postTVOnTheAir;","import { POST_TV_TOP_RATED } from '../../actions/types';\n\nconst initialState = {\n    results: []\n};\n\nconst postTVTopRated = (state = initialState, action) => {\n    switch (action.type) {\n        case POST_TV_TOP_RATED:\n            return {\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state;\n    }\n};\n\nexport default postTVTopRated;","import { GET_TV_DETAILS } from '../../actions/types';\n\nconst initialState = {\n\n};\n\nconst getTVDetails = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_TV_DETAILS:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default getTVDetails;","import { GET_TV_CREDITS } from '../../actions/types'\n\nconst initialState = {\n    cast: []\n};\n\nconst getTVCredits = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_TV_CREDITS:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default getTVCredits;","import { GET_TV_TRAILERS } from '../../actions/types';\n\nconst initialState = {\n    results: []\n};\n\nconst getTVTrailers = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_TV_TRAILERS:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default getTVTrailers;","import { GET_TV_REVIEWS } from '../../actions/types';\n\nconst initialState = {\n    results: []\n};\n\nconst getTVReviews = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_TV_REVIEWS:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default getTVReviews;","\nimport { GET_TV_FAVOURITES } from '../../actions/types';\n\nconst initialState = {\n    results: []\n};\n\nconst getTVFavourites = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_TV_FAVOURITES:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default getTVFavourites;","\nimport { GET_TV_RATED } from '../../actions/types';\n\nconst initialState = {\n    results: []\n};\n\nconst getTVRated = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_TV_RATED:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default getTVRated;\n","import { GET_PEOPLE_DETAILS } from '../../actions/types';\n\nconst initialState = {\n    results: []\n};\n\nconst getPeopleDetails = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_PEOPLE_DETAILS:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default getPeopleDetails;","import { GET_PEOPLE_COMBINED_CREDITS } from '../../actions/types';\n\nconst initialState = {\n    cast: []\n};\n\nconst getPeopleCombinedCredits = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_PEOPLE_COMBINED_CREDITS:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default getPeopleCombinedCredits;","\nimport { GET_PEOPLE_POPULAR } from '../../actions/types';\n\nconst initialState = {\n    results: []\n};\n\nconst getPeoplePopular = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_PEOPLE_POPULAR:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default getPeoplePopular;","import { GET_DISCOVER } from '../actions/types';\n\nconst initialState = {\n    apiKey: 'fb8a39c9807f2120f494db319897180d',\n    results: []\n};\n\nconst getDiscover = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_DISCOVER:\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n}\n\nexport default getDiscover;","\nimport { combineReducers } from 'redux';\nimport PostMDBConfigReducer from './PostMDBConfigReducer';\n\n// import getRequestToken from './authenticationReducers/getRequestToken';\n// import getSession from './authenticationReducers/getSession';\n// import deleteSession from './authenticationReducers/deleteSession';\n// import getGuestSession from './authenticationReducers/getGuestSession';\n// import toggleLogInStatus from './authenticationReducers/toggleLogInStatus';\n// import getUserDetails from './authenticationReducers/getUserDetails';\n\nimport postMovieGenres from './movieReducers/postMovieGenres';\n// import postTVGenres from './TVReducers/postTVGenres';\n\nimport setItemType from './setItemType';\nimport toggleNav from './toggleNav';\nimport searchData from './searchData';\n// import postSearchResults from './postSearchResults';\n\nimport postMoviesNowPlaying from './movieReducers/postMoviesNowPlaying';\nimport postMoviesPopular from './movieReducers/postMoviesPopular';\nimport postMoviesTopRated from './movieReducers/postMoviesTopRated';\nimport postMoviesUpcoming from './movieReducers/postMoviesUpcoming';\nimport getMovieDetails from './movieReducers/getMovieDetails';\nimport getMovieCredits from './movieReducers/getMovieCredits';\nimport getMovieTrailers from './movieReducers/getMovieTrailers';\nimport getMovieReviews from './movieReducers/getMovieReviews';\nimport getMovieFavorites from './movieReducers/getMovieFavourites';\nimport getMoviesRated from './movieReducers/getMoviesRated';\nimport rateMovie from './movieReducers/rateMovie';\n\nimport postTVAiringToday from './TVReducers/postTVAiringToday';\nimport postTVPopular from './TVReducers/postTVPopular';\nimport postTVOnTheAir from './TVReducers/postTVOnTheAir';\nimport postTVTopRated from './TVReducers/postTVTopRated';\nimport getTVDetails from './TVReducers/getTVDetails';\nimport getTVCredits from './TVReducers/getTVCredits';\nimport getTVTrailers from './TVReducers/getTVTrailers';\nimport getTVReviews from './TVReducers/getTVReviews';\nimport getTVFavorites from './TVReducers/getTVFavourites';\nimport getTVRated from './TVReducers/getTVRated';\n\nimport getPeopleDetails from './peopleReducers/getPeopleDetails';\nimport getPeopleCombinedCredits from './peopleReducers/getPeopleCombinedCredits';\nimport getPeoplePopular from './peopleReducers/getPeoplePopular.js';\n\nimport getDiscover from './getDiscover';\n\n// Combine Every single reducer for store.\nconst rootReducer = combineReducers({\n    PostMDBConfig: PostMDBConfigReducer,\n\n    // getRequestToken,\n    // getSession,\n    // deleteSession,\n    // getGuestSession,\n    // toggleLogInStatus,\n    // getUserDetails,\n\n    postMovieGenres,\n\n    setItemType,\n    toggleNav,\n    searchData,\n    // postSearchResults,\n\n    postMoviesNowPlaying,\n    postMoviesPopular,\n    postMoviesTopRated,\n    postMoviesUpcoming,\n    getMovieDetails,\n    getMovieCredits,\n    getMovieTrailers,\n    getMovieReviews,\n    getMovieFavorites,\n    getMoviesRated,\n    rateMovie,\n\n    postTVAiringToday,\n    postTVPopular,\n    postTVOnTheAir,\n    postTVTopRated,\n    getTVDetails,\n    getTVCredits,\n    getTVTrailers,\n    getTVReviews,\n    getTVFavorites,\n    getTVRated,\n\n    getPeopleDetails,\n    getPeopleCombinedCredits,\n    getPeoplePopular,\n\n    getDiscover,\n});\n\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from 'redux';\n// Replaced Wtih:\n// import { createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\n\n// npm install --save redux-thunk for redux-thunk to work\n\n// Somehow installs the redux store debugger with this idk how though LOL.\n\n\nconst middleware = [thunk];\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(...middleware)))\n\n// Replaced with:\n// const store = createStore(rootReducer)\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport store from './store';\n\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));"],"sourceRoot":""}